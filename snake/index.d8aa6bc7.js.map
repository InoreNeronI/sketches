{"mappings":"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","sources":["src/snake/classes/snake.js"],"sourcesContent":["class Snake {\n  constructor(x, y, width, colour, initialSize = 1) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.colour = colour;\n    this.initialSize = initialSize;\n\n    this.borderRadius = this.width / 2;\n    this.xdir = width;\n    this.ydir = 0;\n    this.size = initialSize;\n    this.body = [];\n\n    this.eyeSize = width / 5;\n    this.eyePosFacing = width / 2;\n    this.eyePosLeft = width / 4;\n    this.eyePosRight = width / 1.25;\n  }\n\n  coords() {\n    return this.body.reduce((coords, block) => {\n      coords[[block.x, block.y]] = true;\n      return coords;\n    }, {});\n  }\n\n  changeDir(xdir, ydir) {\n    this.xdir = xdir;\n    this.ydir = ydir;\n  }\n\n  eat(food) {\n    return this.x === food.x && this.y === food.y && ++this.size;\n  }\n\n  isDead(grid) {\n    return this.body.concat(grid.unsafeBlocks).some((block) => dist(this.x, this.y, block.x, block.y) < 1);\n  }\n\n  up() {\n    (this.size === 0 || (this.xdir !== 0 && this.ydir === 0)) && this.changeDir(0, -this.width);\n  }\n\n  down() {\n    (this.size === 0 || (this.xdir !== 0 && this.ydir === 0)) && this.changeDir(0, this.width);\n  }\n\n  left() {\n    (this.size === 0 || (this.xdir === 0 && this.ydir !== 0)) && this.changeDir(-this.width, 0);\n  }\n\n  right() {\n    (this.size === 0 || (this.xdir === 0 && this.ydir !== 0)) && this.changeDir(this.width, 0);\n  }\n\n  update() {\n    for (let i = 0; i < this.body.length - 1; i++) {\n      this.body[i] = this.body[i + 1];\n    }\n\n    if (this.size >= this.body.length) {\n      this.body[this.size - 1] = createVector(this.x, this.y);\n    }\n\n    this.x += this.xdir;\n    this.y += this.ydir;\n  }\n\n  isFacingUp() {\n    return this.xdir === 0 && this.ydir < 0;\n  }\n\n  isFacingDown() {\n    return this.xdir === 0 && this.ydir > 0;\n  }\n\n  isFacingRight() {\n    return this.xdir > 0 && this.ydir === 0;\n  }\n\n  isFacingLeft() {\n    return this.xdir < 0 && this.ydir === 0;\n  }\n\n  getHeadDimensions() {\n    return [\n      this.isFacingUp() || this.isFacingLeft() ? this.borderRadius : 0, // top-left\n      this.isFacingUp() || this.isFacingRight() ? this.borderRadius : 0, // top-right\n      this.isFacingDown() || this.isFacingRight() ? this.borderRadius : 0, // bottom-right\n      this.isFacingDown() || this.isFacingLeft() ? this.borderRadius : 0, // bottom-left\n    ];\n  }\n\n  getEyeDimensions() {\n    return [\n      this.isFacingLeft() || this.isFacingRight() ? this.eyePosFacing : this.eyePosLeft,\n      this.isFacingLeft() || this.isFacingRight() ? this.eyePosFacing : this.eyePosRight,\n      this.isFacingLeft() || this.isFacingRight() ? this.eyePosLeft : this.eyePosFacing,\n      this.isFacingLeft() || this.isFacingRight() ? this.eyePosRight : this.eyePosFacing,\n    ];\n  }\n\n  draw() {\n    fill(this.colour);\n\n    const [topLeftRadius, topRightRadius, bottomRightRadius, bottomLeftRadius] = this.getHeadDimensions();\n\n    // draw head\n    rect(this.x, this.y, this.width, this.width, topLeftRadius, topRightRadius, bottomRightRadius, bottomLeftRadius);\n\n    // draw body\n    this.body.forEach((block) => rect(block.x, block.y, this.width, this.width));\n\n    // draw eyes\n    fill(25, 25, 25);\n\n    const [xEyeLeft, xEyeRight, yEyeLeft, yEyeRight] = this.getEyeDimensions();\n\n    circle(this.x + xEyeLeft, this.y + yEyeLeft, this.eyeSize);\n    circle(this.x + xEyeRight, this.y + yEyeRight, this.eyeSize);\n  }\n}\n"],"names":[],"version":3,"file":"index.d8aa6bc7.js.map"}