{"mappings":"AAAA;;;;;;;;CAQC,GAED,oCAAoC;AACpC,6CAA6C;AAC7C,wBAAwB;AAExB,MAAM;IACJ,IAAI;IACJ,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,KAAK;IACL,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,QAAQ;IAER,YAAY,CAAC,EAAE,CAAC,EAAE,GAAG,CAAE;QACrB,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,CAAC,GAAG;QACT,IAAI,CAAC,CAAC,GAAG;QACT,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,OAAO,GAAG;IACjB;IAEA,OAAO;QACL,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE;YAC5C,6BAA6B;YAC7B,KAAK,YAAY,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,2BAA2B;YAC7D;QACF;QACA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;YAC5B,mCAAmC;YACnC,KAAK,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,2BAA2B;YACvD;QACF;QACA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YAC/B,gCAAgC;YAChC,KAAK,OAAO,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI;YACjC;QACF;QACA,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,oDAAoD;YACpD,KAAK,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,6BAA6B;YAC9E;QACF;QACA,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,kBAAkB;YAClB,KAAK,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK;YACjC;QACF;QACA,gBAAgB;QAChB,KAAK,QAAQ,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK;QAEnC,kDAAkD;QAClD,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU;YACrC,SAAS;YACT,IAAI,IAAI,CAAC,IAAI,EACX,KAAK,KAAK,IAAI;YAEhB,KAAK,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,aAAa,KAAK,IAAI,CAAC,CAAC,GAAG,aAAa;YAChE,SAAS,aAAa,aAAa;YACnC,WAAW,KAAK,OAAO,KAAK;QAC9B;QAEA,+BAA+B;QAC/B,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,iBAAiB;YAC5C,SAAS;YACT,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,KAAK,KAAK,IAAI;gBACd,KAAK,gBAAM,IAAI,CAAC,CAAC,GAAG,aAAa,KAAK,IAAI,CAAC,CAAC,GAAG,aAAa;YAC9D;YACA,SAAS,aAAa,aAAa;YACnC,WAAW,KAAK,OAAO,KAAK;QAC9B;IACF;AACF","sources":["src/emoji-minesweeper/Square.js"],"sourcesContent":["/*\n *  Emoji Minesweeper\n *  Copyright (c) 2024 Michael Kolesidis\n *  GNU Affero General Public License v3.0\n *\n * Square.js contains the Square class with all the\n * functionality handling what will the content\n * of each square be.\n */\n\n// Disable the Friendly Error System\n// (not used in the minified version of p5js)\ndisableFriendlyErrors = true;\n\nclass Square {\n  num;\n  i;\n  j;\n  x; // the exact position of the square inside the canvas, in the horizontal axis (in pixels)\n  y; // the exact position of the square inside the canvas, in the vertical axis (in pixels)\n  mine;\n  minesAround;\n  opened;\n  clicked; // In order to show detonation only on clicked mine\n  flagged;\n\n  constructor(i, j, num) {\n    this.num = num;\n    this.i = i;\n    this.j = j;\n    this.x = i * squareSize;\n    this.y = j * squareSize;\n    this.mine = false;\n    this.minesAround = 0;\n    this.opened = false;\n    this.clicked = false;\n    this.flagged = false;\n  }\n\n  draw() {\n    if (this.opened && this.clicked && this.mine) {\n      // The mine the player opened\n      text(DETONATION, this.x, this.y); // üí• or according to theme\n      return;\n    }\n    if (this.opened && this.mine) {\n      // The mines the played didn't open\n      text(MINE, this.x, this.y); // üí£ or according to theme\n      return;\n    }\n    if (this.opened && this.flagged) {\n      // Flagged square was not a mine\n      text(WRONG, this.x, this.y); // ‚ùå\n      return;\n    }\n    if (this.opened) {\n      // Calculate the number of mines touching the square\n      text(NUMBERS[this.minesAround], this.x, this.y); // ‚¨úÔ∏è1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£4Ô∏è‚É£5Ô∏è‚É£6Ô∏è‚É£7Ô∏è‚É£8Ô∏è‚É£\n      return;\n    }\n    if (this.flagged) {\n      // Flagged squares\n      text(FLAG, this.x, this.y); // üö©\n      return;\n    }\n    // Empty squares\n    text(CLOSED, this.x, this.y); // ‚¨úÔ∏è\n\n    // Square numbers and mine locations for debugging\n    if (window.location.hash === '#debug') {\n      textSize(10.5);\n      if (this.mine) {\n        fill(255, 61, 61);\n      }\n      text(this.num, this.x + squareSize / 2.5, this.y - squareSize / 6);\n      textSize(squareSize - squareSize * 0.05);\n      darkMode ? fill(225) : fill(35);\n    }\n\n    // Mine locations for debugging\n    if (window.location.hash === '#debug-simple') {\n      textSize(10.5);\n      if (this.mine) {\n        fill(255, 61, 61);\n        text('üî¥', this.x + squareSize / 2.5, this.y - squareSize / 6);\n      }\n      textSize(squareSize - squareSize * 0.05);\n      darkMode ? fill(225) : fill(35);\n    }\n  }\n}\n"],"names":[],"version":3,"file":"index.109b571d.js.map"}