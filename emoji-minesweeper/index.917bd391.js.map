{"mappings":"ACYA,sBAAwB,CAAA","sources":["<anon>","src/emoji-minesweeper/Square.js"],"sourcesContent":["/*\n *  Emoji Minesweeper\n *  Copyright (c) 2024 Michael Kolesidis\n *  GNU Affero General Public License v3.0\n *\n * Square.js contains the Square class with all the\n * functionality handling what will the content\n * of each square be.\n */ // Disable the Friendly Error System\n// (not used in the minified version of p5js)\ndisableFriendlyErrors = true;\nclass Square {\n    num;\n    i;\n    j;\n    x;\n    y;\n    mine;\n    minesAround;\n    opened;\n    clicked;\n    flagged;\n    constructor(i, j, num){\n        this.num = num;\n        this.i = i;\n        this.j = j;\n        this.x = i * squareSize;\n        this.y = j * squareSize;\n        this.mine = false;\n        this.minesAround = 0;\n        this.opened = false;\n        this.clicked = false;\n        this.flagged = false;\n    }\n    draw() {\n        if (this.opened && this.clicked && this.mine) {\n            // The mine the player opened\n            text(DETONATION, this.x, this.y); // üí• or according to theme\n            return;\n        }\n        if (this.opened && this.mine) {\n            // The mines the played didn't open\n            text(MINE, this.x, this.y); // üí£ or according to theme\n            return;\n        }\n        if (this.opened && this.flagged) {\n            // Flagged square was not a mine\n            text(WRONG, this.x, this.y); // ‚ùå\n            return;\n        }\n        if (this.opened) {\n            // Calculate the number of mines touching the square\n            text(NUMBERS[this.minesAround], this.x, this.y); // ‚¨úÔ∏è1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£4Ô∏è‚É£5Ô∏è‚É£6Ô∏è‚É£7Ô∏è‚É£8Ô∏è‚É£\n            return;\n        }\n        if (this.flagged) {\n            // Flagged squares\n            text(FLAG, this.x, this.y); // üö©\n            return;\n        }\n        // Empty squares\n        text(CLOSED, this.x, this.y); // ‚¨úÔ∏è\n        // Square numbers and mine locations for debugging\n        if (window.location.hash === \"#debug\") {\n            textSize(10.5);\n            if (this.mine) fill(255, 61, 61);\n            text(this.num, this.x + squareSize / 2.5, this.y - squareSize / 6);\n            textSize(squareSize - squareSize * 0.05);\n            darkMode ? fill(225) : fill(35);\n        }\n        // Mine locations for debugging\n        if (window.location.hash === \"#debug-simple\") {\n            textSize(10.5);\n            if (this.mine) {\n                fill(255, 61, 61);\n                text(\"\\uD83D\\uDD34\", this.x + squareSize / 2.5, this.y - squareSize / 6);\n            }\n            textSize(squareSize - squareSize * 0.05);\n            darkMode ? fill(225) : fill(35);\n        }\n    }\n}\n\n//# sourceMappingURL=index.917bd391.js.map\n","/*\n *  Emoji Minesweeper\n *  Copyright (c) 2024 Michael Kolesidis\n *  GNU Affero General Public License v3.0\n *\n * Square.js contains the Square class with all the\n * functionality handling what will the content\n * of each square be.\n */\n\n// Disable the Friendly Error System\n// (not used in the minified version of p5js)\ndisableFriendlyErrors = true;\n\nclass Square {\n  num;\n  i;\n  j;\n  x; // the exact position of the square inside the canvas, in the horizontal axis (in pixels)\n  y; // the exact position of the square inside the canvas, in the vertical axis (in pixels)\n  mine;\n  minesAround;\n  opened;\n  clicked; // In order to show detonation only on clicked mine\n  flagged;\n\n  constructor(i, j, num) {\n    this.num = num;\n    this.i = i;\n    this.j = j;\n    this.x = i * squareSize;\n    this.y = j * squareSize;\n    this.mine = false;\n    this.minesAround = 0;\n    this.opened = false;\n    this.clicked = false;\n    this.flagged = false;\n  }\n\n  draw() {\n    if (this.opened && this.clicked && this.mine) {\n      // The mine the player opened\n      text(DETONATION, this.x, this.y); // üí• or according to theme\n      return;\n    }\n    if (this.opened && this.mine) {\n      // The mines the played didn't open\n      text(MINE, this.x, this.y); // üí£ or according to theme\n      return;\n    }\n    if (this.opened && this.flagged) {\n      // Flagged square was not a mine\n      text(WRONG, this.x, this.y); // ‚ùå\n      return;\n    }\n    if (this.opened) {\n      // Calculate the number of mines touching the square\n      text(NUMBERS[this.minesAround], this.x, this.y); // ‚¨úÔ∏è1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£4Ô∏è‚É£5Ô∏è‚É£6Ô∏è‚É£7Ô∏è‚É£8Ô∏è‚É£\n      return;\n    }\n    if (this.flagged) {\n      // Flagged squares\n      text(FLAG, this.x, this.y); // üö©\n      return;\n    }\n    // Empty squares\n    text(CLOSED, this.x, this.y); // ‚¨úÔ∏è\n\n    // Square numbers and mine locations for debugging\n    if (window.location.hash === '#debug') {\n      textSize(10.5);\n      if (this.mine) {\n        fill(255, 61, 61);\n      }\n      text(this.num, this.x + squareSize / 2.5, this.y - squareSize / 6);\n      textSize(squareSize - squareSize * 0.05);\n      darkMode ? fill(225) : fill(35);\n    }\n\n    // Mine locations for debugging\n    if (window.location.hash === '#debug-simple') {\n      textSize(10.5);\n      if (this.mine) {\n        fill(255, 61, 61);\n        text('üî¥', this.x + squareSize / 2.5, this.y - squareSize / 6);\n      }\n      textSize(squareSize - squareSize * 0.05);\n      darkMode ? fill(225) : fill(35);\n    }\n  }\n}\n"],"names":["disableFriendlyErrors"],"version":3,"file":"index.917bd391.js.map"}