{"mappings":"AAAA,MAAM,iBAAiB;IACrB,YAAY,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAE;QACpC,KAAK,CAAC,GAAG;QAET,UAAU;QACV,IAAI,CAAC,KAAK,GAAG;YAAC;YAAK;YAAK;SAAI;QAE5B,OAAO;QACP,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,IAAI,GAAG;QAEZ,UAAU;QACV,IAAI,CAAC,KAAK,GAAG,OAAO;QACpB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,UAAU;IACxD;IAEA,uBAAuB;IACvB,WAAW;QACT,KAAK,CAAC;QACN,IAAI,IAAI,CAAC,QAAQ,GAAG,GAClB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,GAAG;aAE9B,IAAI,CAAC,IAAI,GAAG;IAEhB;IAEA,wBAAwB;IACxB,UAAU;QACR,IAAI,CAAC,KAAK;IACZ;IAEA,mCAAmC;IACnC,OAAO;QACL,IAAI,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ;QAChD,IAAI,CAAC,IAAI,GAAG,aAAa,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK;QAC/C,IAAI,CAAC,CAAC,GAAG,OAAO,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;IACtC;IAEA,iBAAiB;IACjB,SAAS;QACP,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACvC,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG;IAC9B;AACF","sources":["src/bullet-hell/class/particle.js"],"sourcesContent":["class Particle extends Entity {\n  constructor(x, y, minSpeed, maxSpeed) {\n    super(x, y);\n\n    // Display\n    this.color = [236, 240, 241];\n\n    // Misc\n    this.decayMax = 4;\n    this.decayMin = 2;\n    this.lifespan = 255;\n    this.type = 'particle';\n\n    // Physics\n    this.angle = random(360);\n    this.angVel = 0;\n    this.gravX = 0;\n    this.gravY = 0;\n    this.rMax = 6;\n    this.rMin = 3;\n    this.vel = p5.Vector.random2D().mult(random(minSpeed, maxSpeed));\n  }\n\n  // Update all cooldowns\n  cooldown() {\n    super.cooldown();\n    if (this.lifespan > 0) {\n      this.lifespan -= this.decay * dt();\n    } else {\n      this.dead = true;\n    }\n  }\n\n  // Display on the canvas\n  display() {\n    this.model();\n  }\n\n  // Any dynamic initialization to do\n  init() {\n    this.decay = random(this.decayMin, this.decayMax);\n    this.grav = createVector(this.gravX, this.gravY);\n    this.r = random(this.rMin, this.rMax);\n  }\n\n  // Update physics\n  update() {\n    this.vel.add(p5.Vector.mult(this.grav, dt()));\n    super.update();\n    this.angle += this.angVel * dt();\n  }\n}\n"],"names":[],"version":3,"file":"index.2347e443.js.map"}