{"mappings":"","sources":["src/bullet-hell/class/starfield.js"],"sourcesContent":["class Starfield {\n  constructor(num, starSpeed) {\n    this.alpha = LEVEL[0].alpha;\n    this.bg = color(LEVEL[0].bg);\n    this.color = color(LEVEL[0].color);\n    this.speed = starSpeed;\n    this.stars = [];\n\n    // Create stars\n    for (let i = 0; i < num; i++) {\n      this.stars.push({\n        noise: 10 * i,\n        deltaNoise: random(0.03),\n        r: random(2),\n        x: random(width),\n        y: random(height),\n        dy: random(starSpeed),\n      });\n    }\n  }\n\n  // Render and update each star\n  display() {\n    // Lerp to proper colors\n    if (blackStarfield) {\n      this.alpha = 127;\n      this.bg = color(0);\n      this.color = color(255);\n    } else {\n      this.alpha = lerp(this.alpha, curLevel.alpha, STARFIELD_LERP);\n      this.bg = lerpColor(this.bg, color(curLevel.bg), STARFIELD_LERP);\n      this.color = lerpColor(this.color, color(curLevel.color), STARFIELD_LERP);\n    }\n\n    // Skip rendering stars if low graphics mode\n    if (!showStars) return;\n\n    // Render stars\n    for (let i = 0; i < this.stars.length; i++) {\n      let s = this.stars[i];\n\n      // Render star\n      this.color.setAlpha(this.alpha * noise(s.noise));\n      fill(this.color);\n      noStroke();\n      ellipse(s.x, s.y, s.r, s.r);\n\n      // Update position\n      if (!paused) {\n        s.y += s.dy * dt();\n        if (s.y - s.r > height) {\n          s.r = random(2);\n          s.x = random(width);\n          s.y = 0;\n          s.dy = random(this.speed);\n        }\n      }\n\n      // Update noise\n      s.noise += s.deltaNoise;\n    }\n  }\n}\n"],"names":[],"version":3,"file":"index.93abebb4.js.map"}