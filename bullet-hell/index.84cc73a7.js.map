{"mappings":"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","sources":["src/bullet-hell/index.js"],"sourcesContent":["// Config\nconst BOMB_COUNT = 2;\nconst BOMB_FLASH_DURATION = 5;\nconst BOMBS_PER_LEVEL = 1;\nconst BOSS_GRACE_PERIOD = 120;\nconst BOSS_SPAWN_DELAY = 120;\nconst INVULN_TIME = 20;\nlet MAP_HEIGHT = 650;\nconst MODEL_LINE_ALPHA = 127;\nconst NUM_STARS = 300;\nconst PLAYER_FIRE_RATE = 8;\nconst PLAYER_HP = 7;\nconst PLAYER_RADIUS = 6;\nconst PLAYER_SPEED = 4;\nconst SCORE_UPDATE_SPEED = 4;\nconst SLOWDOWN_ALPHA = 95;\nconst SLOWDOWN_ALPHA_FULL = 127;\nconst SLOWDOWN_DT = 0.4;\nconst SLOWDOWN_DURATION = 120;\nconst SLOWDOWN_WAIT_NEXT = 600;\nconst SPAWN_GRACE_PERIOD = 60;\nconst STARFIELD_LERP = 0.2;\nconst STARFIELD_SPEED = 10;\nconst UI_PANEL_HEIGHT = 100;\nconst WORLD_CEILING = -50;\n\n// Background\nlet starfield;\n\n// Cooldowns\nlet bossTime;\nlet flashTime;\nlet nextSlowdownTime;\nlet slowTime;\nlet spawnTime;\n\n// Debug measurements\nlet avgFPS = 0;\nlet numFPS = 0;\n\n// Debug mode\nlet blackStarfield = false;\nlet lowGraphics = false;\nlet showFPS = false;\nlet showHitboxes = false;\nlet showStars = true;\n\n// Entities\nlet boss;\nlet bullets;\nlet enemies;\nlet items;\nlet pl;\nlet ps;\nlet walls;\n\n// Game state\nlet curLevel;\nlet level;\nlet levelScore;\nlet paused = false;\nlet score;\nlet scoreMult;\nlet scoreToAdd;\nlet toSpawn;\nlet toSpawnBoss;\n\n// Powerups\nlet bombs;\n\n// Add a score\nfunction addScore(points) {\n  scoreToAdd += points;\n  setScoreStyle('#F1C40F', 'bold');\n}\n\n// Display a health bar for a boss\nfunction bossHealthBar() {\n  let h = boss.hp / boss.maxHp;\n  if (h === 0) return;\n\n  let c = color(215, 60, 44, 191);\n  fill(c);\n  noStroke();\n  rectMode(CENTER);\n  rect(width / 2 - 0.5, 10, h * (width - 200), 10);\n}\n\n// Calculate FPS and update sidebar\nfunction calculateFPS() {\n  let f = frameRate();\n  avgFPS += (f - avgFPS) / ++numFPS;\n  document.getElementById('fps').innerHTML = 'FPS: ' + round(f);\n  document.getElementById('avgfps').innerHTML = 'Avg. FPS: ' + avgFPS.toFixed(1);\n}\n\n// Clear all entities (except player)\nfunction clearEntities() {\n  boss = null;\n  bullets = [];\n  enemies = [];\n  items = [];\n  ps = [];\n  walls = [];\n}\n\n// Update all cooldowns\nfunction cooldown() {\n  if (flashTime > 0) flashTime--;\n\n  if (!paused) {\n    if (bossTime > 0) {\n      bossTime -= dt();\n      if (bossTime <= 0) spawnBoss();\n    }\n\n    if (nextSlowdownTime > 0 && slowTime === 0) nextSlowdownTime -= dt();\n    if (nextSlowdownTime < 0) nextSlowdownTime = 0;\n\n    if (slowTime > 0) slowTime -= dt();\n    if (slowTime < 0) slowTime = 0;\n\n    if (spawnTime > 0) spawnTime -= dt();\n    if (spawnTime < 0) spawnTime = 0;\n\n    if (toSpawnBoss && enemies.length === 0) {\n      toSpawnBoss = false;\n      bossTime = BOSS_SPAWN_DELAY;\n    }\n  }\n}\n\n// Return current dt\nfunction dt() {\n  if (paused) {\n    return 0;\n  } else if (slowTime > 0) {\n    return SLOWDOWN_DT;\n  }\n  return 1;\n}\n\n// Draw bomb\nfunction drawBomb(x, y) {\n  fill('#007C21');\n  stroke(0, MODEL_LINE_ALPHA);\n  rectMode(CORNER);\n  rect(x, y, 20, 20);\n}\n\n// Draw heart\nfunction drawHeart(x, y, empty) {\n  fill(empty ? 0 : '#D73C2C');\n  stroke(0, MODEL_LINE_ALPHA);\n  rectMode(CORNER);\n  rect(x, y, 20, 20);\n}\n\n// Load a level\nfunction loadLevel() {\n  if (LEVEL[level + 1]) {\n    level++;\n    curLevel = LEVEL[level];\n    toSpawn = curLevel.spawnCount;\n\n    // Reset cooldowns\n    spawnTime = BOSS_GRACE_PERIOD;\n\n    // Reset powerups\n    bombs += BOMBS_PER_LEVEL;\n\n    // Save score\n    levelScore = score + scoreToAdd;\n  }\n}\n\n// Respawn everything for current level\nfunction reloadLevel() {\n  curLevel = LEVEL[level];\n  toSpawn = curLevel.spawnCount;\n  toSpawnBoss = false;\n\n  // Clear all entities\n  clearEntities();\n  spawnPlayer();\n\n  // Reset cooldowns\n  bossTime = 0;\n  flashTime = 0;\n  nextSlowdownTime = 0;\n  slowTime = 0;\n  spawnTime = SPAWN_GRACE_PERIOD;\n\n  // Reset powerups\n  bombs = BOMB_COUNT;\n  slowdownReady = true;\n\n  // Reset score\n  score = levelScore;\n  scoreToAdd = 0;\n}\n\n// Reset game to first level\nfunction resetGame() {\n  // Game state\n  level = 0;\n  levelScore = 0;\n  score = 0;\n  scoreMult = 1;\n  scoreToAdd = 0;\n  reloadLevel();\n}\n\n// Set score text style\nfunction setScoreStyle(color, weight) {\n  let s = document.getElementById('score').style;\n  s.color = color;\n  s.fontWeight = weight;\n}\n\n// Spawn a boss\nfunction spawnBoss() {\n  if (curLevel.boss) {\n    boss = new Boss(width / 2, WORLD_CEILING);\n    applyTemplate(boss, BOSS[curLevel.boss]);\n    boss.init();\n  } else {\n    loadLevel();\n  }\n}\n\n// Spawn an enemy\nfunction spawnEnemy() {\n  spawnTime = randInt(curLevel.spawnTimeMin, curLevel.spawnTimeMax);\n  let type = randWeight(curLevel.enemy, curLevel.enemyWeight);\n  let e = new Enemy(random(width), WORLD_CEILING);\n  applyTemplate(e, ENEMY[type]);\n  e.init();\n\n  // Determine spawn location\n  if (!e.spawnAboveMap) {\n    e.pos.y = MAP_HEIGHT - WORLD_CEILING;\n  }\n\n  enemies.push(e);\n}\n\n// Spawn an item\nfunction spawnItem(x, y) {\n  if (typeof x === 'undefined' || typeof y === 'undefined') {\n    x = random(width);\n    y = WORLD_CEILING;\n  }\n  let type = randWeight(curLevel.item, curLevel.itemWeight);\n  items.push(new Item(x, y, ITEM[type]));\n}\n\n// Spawn the player at the correct coords\nfunction spawnPlayer() {\n  pl = new Player(width / 2, (MAP_HEIGHT * 3) / 4);\n  pl.init();\n}\n\n// Update game status on displays\nfunction status() {\n  document.getElementById('level').innerHTML = 'Level: ' + (level + 1);\n  document.getElementById('score').innerHTML = 'Score: ' + score;\n  document.getElementById('scoremult').innerHTML = 'Multiplier: ' + scoreMult + 'x';\n\n  // Debugging\n  if (showFPS) calculateFPS();\n}\n\n// Draw player bombs\nfunction uiBombs() {\n  for (let i = 0; i < bombs; i++) {\n    drawBomb(20 + 30 * i, height - UI_PANEL_HEIGHT + 60);\n  }\n}\n\n// Draw player health\nfunction uiHealth() {\n  let empty = pl.maxHp - (pl.hp - 1);\n  for (let i = pl.maxHp; i >= 0; i--) {\n    drawHeart(20 + 30 * i, height - UI_PANEL_HEIGHT + 20, --empty > 0);\n  }\n}\n\n// Draw the UI panel\nfunction uiPanel() {\n  // Draw grey rectangle\n  fill(48);\n  stroke(241, 196, 15);\n  rectMode(CORNER);\n  rect(0, height - UI_PANEL_HEIGHT, width, UI_PANEL_HEIGHT);\n\n  // Draw all UI panel elements\n  strokeWeight(2);\n  uiBombs();\n  uiHealth();\n  uiSlowdown();\n  strokeWeight(1);\n}\n\n// Draw indicator of slowdown recharge status\nfunction uiSlowdown() {\n  push();\n  translate(width - 50, height - 50);\n  rotate(180);\n  stroke(0, MODEL_LINE_ALPHA);\n\n  let loadPercent = (SLOWDOWN_WAIT_NEXT - nextSlowdownTime) / SLOWDOWN_WAIT_NEXT;\n  let angle = 360 * loadPercent;\n\n  // Draw blue/green portion\n  if (angle > 0) {\n    if (angle === 360) {\n      fill(55, 219, 208, SLOWDOWN_ALPHA_FULL);\n    } else {\n      fill(55, 219, 208, SLOWDOWN_ALPHA);\n    }\n    arc(0, 0, 40, 40, 90, 90 + angle);\n  }\n\n  // Draw red portion\n  if (angle < 360) {\n    fill(231, 76, 60, SLOWDOWN_ALPHA);\n    arc(0, 0, 40, 40, 90 + angle, 90);\n  }\n\n  pop();\n}\n\n// Update the score by slowly adding\nfunction updateScore() {\n  if (scoreToAdd >= SCORE_UPDATE_SPEED) {\n    scoreToAdd -= SCORE_UPDATE_SPEED;\n    score += SCORE_UPDATE_SPEED * scoreMult;\n    if (scoreToAdd === 0) setScoreStyle('#ECF0F1', 'normal');\n  } else {\n    score += scoreToAdd * scoreMult;\n    scoreToAdd = 0;\n    setScoreStyle('#ECF0F1', 'normal');\n  }\n}\n\n// Use a bomb powerup\nfunction useBomb() {\n  if (bombs > 0 && !paused) {\n    bombs--;\n    bullets = [];\n    pl.invulnTime = INVULN_TIME;\n    flashTime = BOMB_FLASH_DURATION;\n  }\n}\n\n// Use a slowdown powerup\nfunction useSlowdown() {\n  if (nextSlowdownTime === 0 && !paused) {\n    slowdownReady = false;\n    slowTime = SLOWDOWN_DURATION;\n    nextSlowdownTime = SLOWDOWN_WAIT_NEXT;\n  }\n}\n\n/* Main p5.js functions */\n\nconst parent = document.querySelector('.main');\n\nfunction setup() {\n  // Ensure game can fit vertically inside screen\n  let maxSize = MAP_HEIGHT + UI_PANEL_HEIGHT + 2;\n  let h = parent.offsetHeight > maxSize ? maxSize : parent.offsetHeight;\n  MAP_HEIGHT = h - UI_PANEL_HEIGHT - 2;\n  let c = createCanvas(600, h - 2);\n  c.parent('BulletHell');\n\n  // Configure p5.js\n  angleMode(DEGREES);\n  ellipseMode(RADIUS);\n\n  // Start background starfield\n  starfield = new Starfield(NUM_STARS, STARFIELD_SPEED);\n\n  // Begin level\n  resetGame();\n}\n\nfunction draw() {\n  // Draw the background and starfield\n  flashTime > 0 ? background(255) : background(starfield.bg);\n  starfield.display();\n\n  // Update game status display\n  if (!paused) updateScore();\n  status();\n\n  // Spawn enemies or boss\n  if (!paused && spawnTime === 0 && toSpawn > 0) {\n    toSpawn--;\n    if (toSpawn === 0) toSpawnBoss = true;\n    spawnEnemy();\n  }\n\n  // Update and draw all entities\n  loopOver(items);\n  loopOver(bullets);\n  if (boss) boss.act();\n  loopOver(enemies);\n  pl.act();\n  loopOver(walls);\n  loopOver(ps);\n\n  // Update all cooldowns\n  cooldown();\n\n  // Draw UI panel\n  uiPanel();\n\n  // Draw boss health bar\n  if (boss) bossHealthBar();\n\n  // Check for boss death\n  if (boss && boss.dead) {\n    boss.onDeath();\n    boss = null;\n  }\n\n  // Check for player death\n  if (pl.dead) pl.onDeath();\n}\n\nfunction keyPressed() {\n  // Use a bomb\n  if (key === 'C' || key === 'M') useBomb();\n\n  // Toggle FPS display\n  if (key === 'F') {\n    showFPS = !showFPS;\n    document.getElementById('debug').style.display = showFPS ? 'block' : 'none';\n    if (showFPS) {\n      avgFPS = 0;\n      numFPS = 0;\n    }\n  }\n\n  // Toggle low graphics settings\n  if (key === 'G') {\n    showStars = lowGraphics;\n    lowGraphics = !lowGraphics;\n    if (lowGraphics) ps = [];\n  }\n\n  // Toggle hitbox display\n  if (key === 'H') showHitboxes = !showHitboxes;\n\n  // Pause\n  if (key === 'P') paused = !paused;\n\n  // Toggle black starfield\n  if (key === 'T') blackStarfield = !blackStarfield;\n\n  // Use a slowdown\n  if (key === 'X' || key === 'N') useSlowdown();\n\n  // Toggle rendering stars\n  if (key === 'Y') showStars = !showStars;\n}\n"],"names":[],"version":3,"file":"index.84cc73a7.js.map"}