{"mappings":"","sources":["src/bullet-hell/class/boss.js"],"sourcesContent":["class Boss extends Ship {\n  constructor(x, y) {\n    super(x, y);\n\n    // AI\n    this.nextStage = null;\n    this.stage = null;\n    this.stages = {};\n\n    // Cooldown\n    this.healthCooldown = -1;\n    this.nextStageTime = -1;\n\n    // Display\n    this.boomSize = 256;\n    this.boomSpeedMax = 4;\n    this.boomType = PS.confetti;\n\n    // Misc\n    this.dropRate = 0.002;\n    this.emitters = [];\n    this.type = 'boss';\n\n    // Physics\n    this.r = 28;\n\n    // Stats\n    this.points = 1000;\n  }\n\n  // All operations to do per tick\n  act() {\n    if (!paused) {\n      if (this.stage && this.stages[this.stage].ai) {\n        this.stages[this.stage].ai(this);\n      }\n      this.collidePlayer();\n      this.spawnItem();\n    }\n    super.act();\n  }\n\n  // Damage player if in contact\n  collidePlayer() {\n    if (this.collide(pl)) pl.damage();\n  }\n\n  // Update all cooldowns\n  cooldown() {\n    super.cooldown();\n    if (this.nextStageTime > 0) this.nextStageTime -= dt();\n    if (this.nextStageTime <= 0 && this.nextStageTime > -1) this.switchStage();\n  }\n\n  // Deal damage\n  damage() {\n    super.damage();\n    if (this.healthCooldown > 0) this.healthCooldown--;\n    if (this.healthCooldown === 0) this.switchStage();\n  }\n\n  // Fire weapon\n  fire() {\n    if (this.fireTime > 0) return;\n    this.fireTime = this.fireRate;\n    if (this.stage in this.stages && this.stages[this.stage].attack) {\n      this.stages[this.stage].attack(this);\n    }\n  }\n\n  // Any dynamic initialization to do\n  init() {\n    super.init();\n    this.switchStage();\n  }\n\n  // Events\n  onKilled() {\n    addScore(this.points);\n    bullets = [];\n    loadLevel();\n    this.explode();\n  }\n\n  // Spawn an item above the map\n  spawnItem() {\n    if (random() < this.dropRate * dt()) spawnItem();\n  }\n\n  // Trigger next stage of boss fight\n  switchStage() {\n    this.healthCooldown = -1;\n    this.nextStageTime = -1;\n\n    // Finish stage\n    if (this.stage && this.stages[this.stage] && this.stages[this.stage].finish) {\n      this.stages[this.stage].finish(this);\n    }\n\n    // Start the next stage\n    if (this.nextStage in this.stages) {\n      this.stage = this.nextStage;\n      let curStage = this.stages[this.stage];\n      if (curStage.init) curStage.init(this);\n\n      // Set next stage\n      if (Array.isArray(curStage.nextStage)) {\n        // Pick random stage from array\n        this.nextStage = random(curStage.nextStage);\n      } else {\n        this.nextStage = curStage.nextStage;\n      }\n\n      // Set limits for switching stage\n      let t = curStage.timeLimit;\n      this.nextStageTime = t ? t : -1;\n      let h = curStage.healthLimit;\n      if (h) {\n        this.healthCooldown = h * this.maxHp;\n      }\n    } else {\n      this.stage = null;\n    }\n  }\n}\n"],"names":[],"version":3,"file":"index.1554b9ce.js.map"}