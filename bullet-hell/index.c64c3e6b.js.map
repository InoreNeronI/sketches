{"mappings":"","sources":["src/bullet-hell/class/ship.js"],"sourcesContent":["class Ship extends Entity {\n  constructor(x, y) {\n    super(x, y);\n\n    // Cooldowns\n    this.fireTime = 10;\n\n    // Display\n    this.boomSize = 32;\n    this.boomSpeedMax = 3;\n    this.boomSpeedMin = 0;\n    this.boomType = PS.explosion;\n    this.model = MODEL.ship.basic;\n\n    // Map boundaries\n    this.edgeRadius = 2;\n\n    // Misc\n    this.type = 'ship';\n\n    // Stats\n    this.fireRate = 10;\n    this.hp = 0;\n    this.speed = 3;\n  }\n\n  // The attack being used when firing\n  attack() {}\n\n  // Update all cooldowns\n  cooldown() {\n    super.cooldown();\n    if (this.fireTime > 0) this.fireTime -= dt();\n    if (this.fireTime < 0) this.fireTime = 0;\n  }\n\n  // Deal damage\n  damage() {\n    if (this.hp > 0) {\n      this.hp--;\n    } else if (!this.dead) {\n      this.dead = true;\n      this.onKilled();\n    }\n  }\n\n  // Display on the canvas\n  display() {\n    this.model();\n\n    // Display hitbox\n    if (showHitboxes) {\n      fill(255, 63);\n      stroke(255);\n      ellipse(this.pos.x, this.pos.y, this.r, this.r);\n    }\n  }\n\n  // Create explosion particle effect\n  explode() {\n    addParticleSystem(this.pos.x, this.pos.y, this.boomSpeedMin, this.boomSpeedMax, this.boomSize, this.boomType);\n  }\n\n  // Fire weapon\n  fire() {\n    if (this.fireTime > 0) return;\n    this.fireTime = this.fireRate;\n    this.attack();\n  }\n\n  // Any dynamic initializations that need to be done\n  init() {\n    this.maxHp = this.hp;\n  }\n\n  // Events\n  onKilled() {}\n  onHitLeft() {\n    this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n  }\n  onHitRight() {\n    this.pos.x = this.mapRight - this.r * this.edgeRadius;\n  }\n}\n"],"names":[],"version":3,"file":"index.c64c3e6b.js.map"}