{"mappings":"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","sources":["src/bullet-hell/template/bosses.js"],"sourcesContent":["const BOSS = {};\n\nBOSS.boss1 = {\n  // AI\n  nextStage: 'enter',\n  stages: {\n    enter: {\n      nextStage: 'ricochet',\n      ai(b) {\n        // Force player back\n        if (pl.pos.y < (MAP_HEIGHT * 3) / 4) {\n          pl.pos.y = lerp(pl.pos.y, (MAP_HEIGHT * 3) / 4, 0.05 * dt());\n        }\n\n        // Move to next stage once positioned correctly\n        if (b.pos.y >= MAP_HEIGHT / 8) {\n          b.pos.y = MAP_HEIGHT / 8;\n          b.vel.y = 0;\n          b.switchStage();\n        }\n      },\n      init(b) {\n        b.speed = 1;\n        b.vel = createVector(0, b.speed);\n        // Whether to do needle stage next\n        b.needleStage = random() < 0.5;\n      },\n    },\n    ricochet: {\n      nextStage: 'wait',\n      timeLimit: 720,\n      ai(b) {\n        b.speed = lerp(b.speed, 3, 0.05 * dt());\n        b.vel.setMag(b.speed);\n\n        // Destroy player's bullets that go above wall\n        for (let i = 0; i < bullets.length; i++) {\n          let e = bullets[i];\n          if (e.fromPlayer) e.mapTop = MAP_HEIGHT / 4;\n        }\n\n        // Fire ricochet bullets\n        b.fire();\n      },\n      attack(b) {\n        emitBullets(b.pos.x, b.pos.y, 90, [-45, 0, 45], 5, 5, BULLET.ricochet);\n      },\n      init(b) {\n        b.fireRate = 35;\n        b.vel = createVector(randSign(), 0);\n        pl.mapTop = MAP_HEIGHT / 4;\n\n        // Create a lightning wall\n        walls.push(new Wall(MAP_HEIGHT / 4, 20, true));\n      },\n      finish(b) {\n        b.vel.x = 0;\n        pl.mapTop = 0;\n\n        // Clear lightning walls\n        walls = [];\n      },\n    },\n    wait: {\n      nextStage: 'center',\n      timeLimit: 120,\n      ai(b) {\n        b.pos.x = lerp(b.pos.x, width / 2, 0.05 * dt());\n      },\n    },\n    center: {\n      ai(b) {\n        if (b.pos.y >= MAP_HEIGHT / 2) {\n          b.pos.y = MAP_HEIGHT / 2;\n          b.vel.y = 0;\n          b.nextStage = b.needleStage ? 'needle' : 'spiral';\n          b.needleStage = !b.needleStage;\n          b.switchStage();\n        }\n      },\n      init(b) {\n        b.vel.y = b.speed;\n      },\n    },\n    spiral: {\n      healthLimit: 0.3,\n      nextStage: 'up',\n      timeLimit: 1200,\n      ai(b) {\n        b.fire();\n      },\n      attack(b) {\n        for (let i = 0; i < b.emitters.length; i++) {\n          b.emitters[i].fire();\n        }\n      },\n      finish(b) {\n        // Kill emitters\n        for (let i = 0; i < b.emitters.length; i++) {\n          b.emitters[i].dead = true;\n        }\n        b.emitters = [];\n      },\n      init(b) {\n        // Make cooldown 0\n        b.fireRate = 0;\n\n        // Create emitters\n        let e1 = new Emitter(-200, 0, b);\n        let e2 = new Emitter(200, 0, b);\n        applyTemplate(e1, {\n          // Misc\n          bulletTemplate: BULLET.basic,\n          fireRate: 60,\n          angles: [0, 60, 120, 180, 240, 300],\n          angVel: 10,\n          maxSpeed: 2,\n          minSpeed: 2,\n        });\n        let angles = [];\n        for (let i = 0; i < 6; i++) {\n          let a = 60 * i;\n          for (let j = 0; j < 3; j++) {\n            angles.push(a + 15 * j);\n          }\n        }\n        applyTemplate(e2, {\n          // Misc\n          bulletTemplate: BULLET.basic,\n          fireRate: 60,\n          angles: angles,\n          angVel: -10,\n          maxSpeed: 1,\n          minSpeed: 1,\n        });\n        b.emitters = [e1, e2];\n      },\n    },\n    up: {\n      nextStage: 'clear',\n      ai(b) {\n        if (b.pos.y <= MAP_HEIGHT / 8) {\n          b.pos.y = MAP_HEIGHT / 8;\n          b.vel.y = 0;\n          b.switchStage();\n        }\n      },\n      init(b) {\n        b.vel = createVector(0, -b.speed / 4);\n      },\n    },\n    clear: {\n      nextStage: 'ricochet',\n      timeLimit: 60,\n      ai(b) {\n        // Force player back\n        if (pl.pos.y < (MAP_HEIGHT * 3) / 4) {\n          pl.pos.y = lerp(pl.pos.y, (MAP_HEIGHT * 3) / 4, 0.05 * dt());\n        }\n      },\n    },\n    needle: {\n      healthLimit: 0.2,\n      nextStage: 'up',\n      timeLimit: 1000,\n      ai(b) {\n        b.fire();\n      },\n      attack(b) {\n        let a = random(360);\n        emitBullets(b.pos.x, b.pos.y, a, [0, 120, 240], 3, 4, BULLET.twoStage);\n      },\n      init(b) {\n        b.fireRate = 50;\n      },\n    },\n  },\n  // Display\n  color: '#009B90',\n  model: MODEL.ship.boss1,\n  // Stats\n  hp: 380,\n  points: 2000,\n  // Methods\n  onHitLeft() {\n    this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n  onHitRight() {\n    this.pos.x = this.mapRight - this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n};\n\nBOSS.heavyBomber = {\n  // AI\n  nextStage: 'enter',\n  stages: {\n    enter: {\n      nextStage: 'bombs',\n      ai(b) {\n        // Move to next stage once positioned correctly\n        if (b.pos.y >= MAP_HEIGHT / 6) {\n          b.pos.y = MAP_HEIGHT / 6;\n          b.vel.y = 0;\n          b.switchStage();\n        }\n      },\n      init(b) {\n        b.speed = 1;\n        b.vel = createVector(0, b.speed);\n      },\n    },\n    bombs: {\n      nextStage: 'center',\n      healthLimit: 0.2,\n      timeLimit: 900,\n      ai(b) {\n        b.speed = lerp(b.speed, 2, 0.05 * dt());\n        b.vel.setMag(b.speed);\n        if (random() < 0.003) b.vel.x *= -1;\n\n        // Fire large bombs\n        b.fire();\n      },\n      attack(b) {\n        let a = random() < 0.5 ? 0 : 180;\n        emitBullets(b.pos.x, b.pos.y, a, [0], 3, 5, BULLET.largeBomb);\n      },\n      init(b) {\n        b.fireRate = 70;\n        b.vel = createVector(randSign(), 0);\n      },\n      finish(b) {\n        b.vel.x = 0;\n      },\n    },\n    center: {\n      nextStage: 'repel',\n      timeLimit: 260,\n      ai(b) {\n        b.pos.x = lerp(b.pos.x, width / 2, 0.05 * dt());\n      },\n    },\n    repel: {\n      nextStage: 'enemies',\n      timeLimit: 60,\n      ai(b) {\n        // Force player back\n        if (pl.pos.y < (MAP_HEIGHT * 3) / 4) {\n          pl.pos.y = lerp(pl.pos.y, (MAP_HEIGHT * 3) / 4, 0.05 * dt());\n        }\n      },\n    },\n    enemies: {\n      nextStage: 'wait',\n      timeLimit: 1200,\n      ai(b) {\n        // Destroy player's bullets that go above wall\n        for (let i = 0; i < bullets.length; i++) {\n          let e = bullets[i];\n          if (e.fromPlayer) e.mapTop = MAP_HEIGHT / 3;\n        }\n\n        // Spawn enemies\n        b.fire();\n      },\n      attack(b) {\n        spawnEnemy();\n      },\n      init(b) {\n        b.fireRate = 80;\n        pl.mapTop = MAP_HEIGHT / 3;\n\n        // Create a lightning wall\n        walls.push(new Wall(MAP_HEIGHT / 3, 20, true));\n      },\n    },\n    wait: {\n      nextStage: 'delay',\n      ai(b) {\n        // Destroy player's bullets that go above wall\n        for (let i = 0; i < bullets.length; i++) {\n          let e = bullets[i];\n          if (e.fromPlayer) e.mapTop = MAP_HEIGHT / 3;\n        }\n\n        if (enemies.length === 0) b.switchStage();\n      },\n      finish(b) {\n        pl.mapTop = 0;\n\n        // Clear lightning walls\n        walls = [];\n      },\n    },\n    delay: {\n      nextStage: 'bullets',\n      timeLimit: 60,\n    },\n    bullets: {\n      nextStage: 'bombs',\n      healthLimit: 0.2,\n      timeLimit: 1200,\n      ai(b) {\n        b.fire();\n      },\n      attack(b) {\n        let a = random(30, 150);\n        emitBullets(b.pos.x, b.pos.y, a, [0], 4, 5, BULLET.large);\n\n        if (random() < 0.1) {\n          let a = random(30, 150);\n          emitBullets(b.pos.x, b.pos.y, a, [0], 0, 3, BULLET.bomb);\n        }\n      },\n      init(b) {\n        b.fireRate = 50;\n      },\n      finish(b) {},\n    },\n  },\n  // Display\n  color: '#009C41',\n  model: MODEL.ship.heavyBomber,\n  // Physics\n  r: 54,\n  // Stats\n  hp: 440,\n  points: 2000,\n  // Methods\n  onHitLeft() {\n    this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n  onHitRight() {\n    this.pos.x = this.mapRight - this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n};\n"],"names":[],"version":3,"file":"index.e6c8a5f9.js.map"}