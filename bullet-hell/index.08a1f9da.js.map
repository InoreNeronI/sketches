{"mappings":"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","sources":["src/bullet-hell/class/boss.js"],"sourcesContent":["class Boss extends Ship {\n  constructor(x, y) {\n    super(x, y);\n\n    // AI\n    this.nextStage = null;\n    this.stage = null;\n    this.stages = {};\n\n    // Cooldown\n    this.healthCooldown = -1;\n    this.nextStageTime = -1;\n\n    // Display\n    this.boomSize = 256;\n    this.boomSpeedMax = 4;\n    this.boomType = PS.confetti;\n\n    // Misc\n    this.dropRate = 0.002;\n    this.emitters = [];\n    this.type = 'boss';\n\n    // Physics\n    this.r = 28;\n\n    // Stats\n    this.points = 1000;\n  }\n\n  // All operations to do per tick\n  act() {\n    if (!paused) {\n      if (this.stage && this.stages[this.stage].ai) {\n        this.stages[this.stage].ai(this);\n      }\n      this.collidePlayer();\n      this.spawnItem();\n    }\n    super.act();\n  }\n\n  // Damage player if in contact\n  collidePlayer() {\n    if (this.collide(pl)) pl.damage();\n  }\n\n  // Update all cooldowns\n  cooldown() {\n    super.cooldown();\n    if (this.nextStageTime > 0) this.nextStageTime -= dt();\n    if (this.nextStageTime <= 0 && this.nextStageTime > -1) this.switchStage();\n  }\n\n  // Deal damage\n  damage() {\n    super.damage();\n    if (this.healthCooldown > 0) this.healthCooldown--;\n    if (this.healthCooldown === 0) this.switchStage();\n  }\n\n  // Fire weapon\n  fire() {\n    if (this.fireTime > 0) return;\n    this.fireTime = this.fireRate;\n    if (this.stage in this.stages && this.stages[this.stage].attack) {\n      this.stages[this.stage].attack(this);\n    }\n  }\n\n  // Any dynamic initialization to do\n  init() {\n    super.init();\n    this.switchStage();\n  }\n\n  // Events\n  onKilled() {\n    addScore(this.points);\n    bullets = [];\n    loadLevel();\n    this.explode();\n  }\n\n  // Spawn an item above the map\n  spawnItem() {\n    if (random() < this.dropRate * dt()) spawnItem();\n  }\n\n  // Trigger next stage of boss fight\n  switchStage() {\n    this.healthCooldown = -1;\n    this.nextStageTime = -1;\n\n    // Finish stage\n    if (this.stage && this.stages[this.stage] && this.stages[this.stage].finish) {\n      this.stages[this.stage].finish(this);\n    }\n\n    // Start the next stage\n    if (this.nextStage in this.stages) {\n      this.stage = this.nextStage;\n      let curStage = this.stages[this.stage];\n      if (curStage.init) curStage.init(this);\n\n      // Set next stage\n      if (Array.isArray(curStage.nextStage)) {\n        // Pick random stage from array\n        this.nextStage = random(curStage.nextStage);\n      } else {\n        this.nextStage = curStage.nextStage;\n      }\n\n      // Set limits for switching stage\n      let t = curStage.timeLimit;\n      this.nextStageTime = t ? t : -1;\n      let h = curStage.healthLimit;\n      if (h) {\n        this.healthCooldown = h * this.maxHp;\n      }\n    } else {\n      this.stage = null;\n    }\n  }\n}\n"],"names":[],"version":3,"file":"index.08a1f9da.js.map"}