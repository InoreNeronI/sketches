{"mappings":"","sources":["src/bullet-hell/util.js"],"sourcesContent":["// Add a new particle system\nfunction addParticleSystem(x, y, minSpeed, maxSpeed, num, template) {\n  if (!lowGraphics) ps.push(new ParticleSystem(x, y, minSpeed, maxSpeed, num, template));\n}\n\n// Substitute properties from a template\nfunction applyTemplate(obj, template) {\n  let keys = Object.keys(template);\n  for (let i = 0; i < keys.length; i++) {\n    let key = keys[i];\n    obj[key] = template[key];\n  }\n}\n\n// Emit bullets\nfunction emitBullets(x, y, baseAngle, angles, minSpeed, maxSpeed, template, fromPlayer) {\n  for (let i = 0; i < angles.length; i++) {\n    let a = baseAngle + angles[i];\n    let b = new Bullet(x, y, a, random(minSpeed, maxSpeed), fromPlayer);\n    applyTemplate(b, template);\n    b.init();\n    bullets.push(b);\n  }\n}\n\n// Loop over an array of entities\nfunction loopOver(arr) {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    let e = arr[i];\n    e.act();\n    if (e.dead) {\n      arr.splice(i, 1);\n      e.onDeath();\n    }\n  }\n}\n\n// Returns a random integer, using the same arguments as p5.js random()\nfunction randInt() {\n  return floor(random(...arguments));\n}\n\n// Randomly returns either -1 or 1\nfunction randSign() {\n  return random() < 0.5 ? -1 : 1;\n}\n\n// Returns a random item from an array using a second array of weights\nfunction randWeight(arr, weight) {\n  // Get total weight\n  let total = weight.reduce(function (prev, cur) {\n    return prev + cur;\n  });\n\n  let r = random(total);\n  let weightSum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    weightSum += weight[i];\n    if (r <= weightSum) return arr[i];\n  }\n}\n"],"names":[],"version":3,"file":"index.88efbd0c.js.map"}