{"mappings":"","sources":["src/bullet-hell/class/emitter.js"],"sourcesContent":["class Emitter extends Entity {\n  constructor(x, y, relativeTo) {\n    super(x, y);\n\n    // Misc\n    this.bulletTemplate = BULLET.basic;\n    this.fireRate = 4;\n    this.rel = relativeTo;\n    this.spinReversal = true;\n    this.type = 'emitter';\n\n    // Physics\n    this.angle = random(360);\n    this.angles = [0];\n    this.angVel = 0;\n    this.angAcc = 0;\n    this.maxAngVel = 30;\n    this.maxSpeed = 0;\n    this.minSpeed = 0;\n  }\n\n  // Border behavior\n  borders() {\n    // Kill if outside map\n    if (this.outsideMap()) {\n      this.dead = true;\n      return;\n    }\n\n    // Behavior when hitting walls\n    let x = this.pos.x;\n    let y = this.pos.y;\n    if (this.rel) {\n      x += this.rel.pos.x;\n      y += this.rel.pos.y;\n    }\n    let r = this.r * this.edgeRadius;\n    if (x - r < this.mapLeft) this.onHitLeft();\n    if (x + r > this.mapRight) this.onHitRight();\n    if (y - r < this.mapTop) this.onHitTop();\n    if (y + r > this.mapBottom) this.onHitBottom();\n  }\n\n  // Update all cooldowns\n  cooldown() {\n    super.cooldown();\n    if (this.fireTime > 0) this.fireTime -= dt();\n    if (this.fireTime < 0) this.fireTime = 0;\n  }\n\n  // Emit bullets\n  emit() {\n    if (this.rel) {\n      emitBullets(\n        this.rel.pos.x + this.pos.x,\n        this.rel.pos.y + this.pos.y,\n        this.angle,\n        this.angles,\n        this.minSpeed,\n        this.maxSpeed,\n        this.bulletTemplate,\n      );\n    } else {\n      emitBullets(this.pos.x, this.pos.y, this.angle, this.angles, this.minSpeed, this.maxSpeed, this.bulletTemplate);\n    }\n  }\n\n  // Fire bullets if possible\n  fire() {\n    this.cooldown();\n    if (this.fireTime > 0) return;\n    this.fireTime = this.fireRate;\n    this.emit();\n    this.update();\n  }\n\n  // Check if entity is outside map\n  outsideMap() {\n    let x = this.pos.x;\n    let y = this.pos.y;\n    if (this.rel) {\n      x += this.rel.pos.x;\n      y += this.rel.pos.y;\n    }\n    let r = this.r * 2;\n    return x + r < this.mapLeft || x - r > this.mapRight || y + r < this.mapTop || y - r > this.mapBottom;\n  }\n\n  // Update physics\n  update() {\n    super.update();\n    if (this.spinReversal && abs(this.angVel + this.angAcc) * dt() >= this.maxAngVel) {\n      this.angAcc *= -1;\n    }\n    this.angVel += this.angAcc * dt();\n    this.angle += this.angVel * dt();\n  }\n}\n"],"names":[],"version":3,"file":"index.51ba1a03.js.map"}