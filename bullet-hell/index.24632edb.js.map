{"mappings":"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","sources":["<anon>","src/bullet-hell/template/enemies.js"],"sourcesContent":["const ENEMY = {};\nENEMY.basic = {\n    // Display\n    color: \"#E74C3C\",\n    // Misc\n    type: \"basicEnemy\",\n    // Stats\n    maxSpeed: 2,\n    minSpeed: 0.5,\n    // Methods\n    ai () {\n        if (random() < 0.02) this.fire();\n    },\n    attack () {\n        emitBullets(this.pos.x, this.pos.y, 90, [\n            0\n        ], 4, 4, BULLET.basic);\n    }\n};\nENEMY.bomber = {\n    // Display\n    boomSize: 64,\n    boomSpeedMax: 5,\n    color: \"#009C41\",\n    model: MODEL.ship.bomber,\n    // Misc\n    type: \"bomber\",\n    // Stats\n    hp: 1,\n    maxSpeed: 3,\n    minSpeed: 1,\n    points: 300,\n    // Methods\n    ai () {\n        if (random() < 0.005) this.vel.x *= -1;\n        if (random() < 0.007) this.fire();\n    },\n    attack () {\n        emitBullets(this.pos.x, this.pos.y, -90, [\n            0\n        ], 0, 0, BULLET.bomb);\n    },\n    init () {\n        this.maxHp = this.hp;\n        this.speed = random(this.minSpeed, this.maxSpeed);\n        this.vel = createVector(this.speed * randSign(), this.speed / 4);\n    },\n    onHitLeft () {\n        this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n        this.vel.x *= -1;\n    },\n    onHitRight () {\n        this.pos.x = this.mapRight - this.r * this.edgeRadius;\n        this.vel.x *= -1;\n    },\n    onKilled () {\n        addScore(this.points);\n        emitBullets(this.pos.x, this.pos.y, random(360), [\n            0,\n            60,\n            120,\n            180,\n            240,\n            300\n        ], 5, 5, BULLET.basic);\n        this.dropItem();\n        this.explode();\n    }\n};\nENEMY.ricochet = {\n    // Display\n    boomSize: 64,\n    boomSpeedMax: 5,\n    color: \"#8E44AD\",\n    model: MODEL.ship.ricochet,\n    // Misc\n    type: \"ricochet\",\n    // Physics\n    r: 24,\n    // Stats\n    hp: 1,\n    maxSpeed: 1.5,\n    minSpeed: 0.5,\n    points: 200,\n    // Methods\n    ai () {\n        if (random() < 0.007) this.fire();\n    },\n    attack () {\n        emitBullets(this.pos.x, this.pos.y, random(360), [\n            0,\n            120,\n            240\n        ], 4, 4, BULLET.ricochet2);\n    },\n    init () {\n        this.maxHp = this.hp;\n        this.speed = random(this.minSpeed, this.maxSpeed);\n        this.vel = createVector(this.speed * randSign(), this.speed);\n    },\n    onHitLeft () {\n        this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n        this.vel.x *= -1;\n    },\n    onHitRight () {\n        this.pos.x = this.mapRight - this.r * this.edgeRadius;\n        this.vel.x *= -1;\n    },\n    onKilled () {\n        addScore(this.points);\n        emitBullets(this.pos.x, this.pos.y, random(360), [\n            0,\n            45,\n            90,\n            135,\n            180,\n            225,\n            270,\n            315\n        ], 5, 5, BULLET.needle);\n        this.dropItem();\n        this.explode();\n    }\n};\nENEMY.shotgunner = {\n    // Display\n    boomSize: 64,\n    boomSpeedMax: 5,\n    color: \"#EA4C88\",\n    model: MODEL.ship.shotgunner,\n    // Misc\n    type: \"shotgunner\",\n    // Physics\n    r: 18,\n    // Stats\n    hp: 1,\n    fireRate: 120,\n    maxSpeed: 1.5,\n    minSpeed: 0.5,\n    points: 300,\n    // Methods\n    ai () {\n        if (random() < 0.005) this.fire();\n    },\n    attack () {\n        let a = this.angleTo(pl) + random(-60, 60);\n        emitBullets(this.pos.x, this.pos.y, a, [\n            -30,\n            0,\n            30\n        ], 2, 3, BULLET.splitter);\n    }\n};\nENEMY.splitter = {\n    // Display\n    boomSize: 64,\n    boomSpeedMax: 5,\n    color: \"#F39C12\",\n    model: MODEL.ship.splitter,\n    // Misc\n    type: \"splitter\",\n    // Physics\n    r: 18,\n    // Stats\n    hp: 1,\n    fireRate: 20,\n    maxSpeed: 2,\n    minSpeed: 1,\n    points: 150,\n    // Methods\n    ai () {\n        if (random() < 0.009) this.fire();\n    },\n    attack () {\n        let a = this.angleTo(pl);\n        emitBullets(this.pos.x, this.pos.y, a, [\n            0\n        ], 3, 4, BULLET.splitter);\n    },\n    onKilled () {\n        addScore(this.points);\n        emitBullets(this.pos.x, this.pos.y, random(360), [\n            0,\n            60,\n            120,\n            180,\n            240,\n            300\n        ], 4, 4, BULLET.basic);\n        this.dropItem();\n        this.explode();\n    }\n};\nENEMY.turret = {\n    // Display\n    color: \"#F39C12\",\n    model: MODEL.ship.turret,\n    // Map boundaries\n    mapTop: 0,\n    // Misc\n    spawnAboveMap: false,\n    type: \"turret\",\n    // Physics\n    r: 17,\n    // Stats\n    fireRate: 20,\n    maxSpeed: 2,\n    minSpeed: 1,\n    // Methods\n    ai () {\n        if (pl.pos.y < this.pos.y && random() < 0.02) this.fire();\n    },\n    attack () {\n        let a = this.angleTo(pl);\n        emitBullets(this.pos.x, this.pos.y, a, [\n            0\n        ], 3, 4, BULLET.basic);\n    },\n    init () {\n        this.maxHp = this.hp;\n        this.speed = random(this.minSpeed, this.maxSpeed);\n        this.vel = createVector(this.speed * randSign(), -this.speed);\n        this.mapBottom = MAP_HEIGHT - WORLD_CEILING;\n    },\n    onHitLeft () {\n        this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n        this.vel.x *= -1;\n    },\n    onHitRight () {\n        this.pos.x = this.mapRight - this.r * this.edgeRadius;\n        this.vel.x *= -1;\n    }\n};\n\n//# sourceMappingURL=index.24632edb.js.map\n","const ENEMY = {};\n\nENEMY.basic = {\n  // Display\n  color: '#E74C3C',\n  // Misc\n  type: 'basicEnemy',\n  // Stats\n  maxSpeed: 2,\n  minSpeed: 0.5,\n  // Methods\n  ai() {\n    if (random() < 0.02) this.fire();\n  },\n  attack() {\n    emitBullets(this.pos.x, this.pos.y, 90, [0], 4, 4, BULLET.basic);\n  },\n};\n\nENEMY.bomber = {\n  // Display\n  boomSize: 64,\n  boomSpeedMax: 5,\n  color: '#009C41',\n  model: MODEL.ship.bomber,\n  // Misc\n  type: 'bomber',\n  // Stats\n  hp: 1,\n  maxSpeed: 3,\n  minSpeed: 1,\n  points: 300,\n  // Methods\n  ai() {\n    if (random() < 0.005) this.vel.x *= -1;\n    if (random() < 0.007) this.fire();\n  },\n  attack() {\n    emitBullets(this.pos.x, this.pos.y, -90, [0], 0, 0, BULLET.bomb);\n  },\n  init() {\n    this.maxHp = this.hp;\n    this.speed = random(this.minSpeed, this.maxSpeed);\n    this.vel = createVector(this.speed * randSign(), this.speed / 4);\n  },\n  onHitLeft() {\n    this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n  onHitRight() {\n    this.pos.x = this.mapRight - this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n  onKilled() {\n    addScore(this.points);\n    emitBullets(this.pos.x, this.pos.y, random(360), [0, 60, 120, 180, 240, 300], 5, 5, BULLET.basic);\n    this.dropItem();\n    this.explode();\n  },\n};\n\nENEMY.ricochet = {\n  // Display\n  boomSize: 64,\n  boomSpeedMax: 5,\n  color: '#8E44AD',\n  model: MODEL.ship.ricochet,\n  // Misc\n  type: 'ricochet',\n  // Physics\n  r: 24,\n  // Stats\n  hp: 1,\n  maxSpeed: 1.5,\n  minSpeed: 0.5,\n  points: 200,\n  // Methods\n  ai() {\n    if (random() < 0.007) this.fire();\n  },\n  attack() {\n    emitBullets(this.pos.x, this.pos.y, random(360), [0, 120, 240], 4, 4, BULLET.ricochet2);\n  },\n  init() {\n    this.maxHp = this.hp;\n    this.speed = random(this.minSpeed, this.maxSpeed);\n    this.vel = createVector(this.speed * randSign(), this.speed);\n  },\n  onHitLeft() {\n    this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n  onHitRight() {\n    this.pos.x = this.mapRight - this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n  onKilled() {\n    addScore(this.points);\n    emitBullets(this.pos.x, this.pos.y, random(360), [0, 45, 90, 135, 180, 225, 270, 315], 5, 5, BULLET.needle);\n    this.dropItem();\n    this.explode();\n  },\n};\n\nENEMY.shotgunner = {\n  // Display\n  boomSize: 64,\n  boomSpeedMax: 5,\n  color: '#EA4C88',\n  model: MODEL.ship.shotgunner,\n  // Misc\n  type: 'shotgunner',\n  // Physics\n  r: 18,\n  // Stats\n  hp: 1,\n  fireRate: 120,\n  maxSpeed: 1.5,\n  minSpeed: 0.5,\n  points: 300,\n  // Methods\n  ai() {\n    if (random() < 0.005) this.fire();\n  },\n  attack() {\n    let a = this.angleTo(pl) + random(-60, 60);\n    emitBullets(this.pos.x, this.pos.y, a, [-30, 0, 30], 2, 3, BULLET.splitter);\n  },\n};\n\nENEMY.splitter = {\n  // Display\n  boomSize: 64,\n  boomSpeedMax: 5,\n  color: '#F39C12',\n  model: MODEL.ship.splitter,\n  // Misc\n  type: 'splitter',\n  // Physics\n  r: 18,\n  // Stats\n  hp: 1,\n  fireRate: 20,\n  maxSpeed: 2,\n  minSpeed: 1,\n  points: 150,\n  // Methods\n  ai() {\n    if (random() < 0.009) this.fire();\n  },\n  attack() {\n    let a = this.angleTo(pl);\n    emitBullets(this.pos.x, this.pos.y, a, [0], 3, 4, BULLET.splitter);\n  },\n  onKilled() {\n    addScore(this.points);\n    emitBullets(this.pos.x, this.pos.y, random(360), [0, 60, 120, 180, 240, 300], 4, 4, BULLET.basic);\n    this.dropItem();\n    this.explode();\n  },\n};\n\nENEMY.turret = {\n  // Display\n  color: '#F39C12',\n  model: MODEL.ship.turret,\n  // Map boundaries\n  mapTop: 0,\n  // Misc\n  spawnAboveMap: false,\n  type: 'turret',\n  // Physics\n  r: 17,\n  // Stats\n  fireRate: 20,\n  maxSpeed: 2,\n  minSpeed: 1,\n  // Methods\n  ai() {\n    if (pl.pos.y < this.pos.y && random() < 0.02) this.fire();\n  },\n  attack() {\n    let a = this.angleTo(pl);\n    emitBullets(this.pos.x, this.pos.y, a, [0], 3, 4, BULLET.basic);\n  },\n  init() {\n    this.maxHp = this.hp;\n    this.speed = random(this.minSpeed, this.maxSpeed);\n    this.vel = createVector(this.speed * randSign(), -this.speed);\n    this.mapBottom = MAP_HEIGHT - WORLD_CEILING;\n  },\n  onHitLeft() {\n    this.pos.x = this.mapLeft + this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n  onHitRight() {\n    this.pos.x = this.mapRight - this.r * this.edgeRadius;\n    this.vel.x *= -1;\n  },\n};\n"],"names":["ENEMY","basic","color","type","maxSpeed","minSpeed","ai","random","fire","attack","emitBullets","pos","x","y","BULLET","bomber","boomSize","boomSpeedMax","model","MODEL","ship","hp","points","vel","bomb","init","maxHp","speed","createVector","randSign","onHitLeft","mapLeft","r","edgeRadius","onHitRight","mapRight","onKilled","addScore","dropItem","explode","ricochet","ricochet2","needle","shotgunner","fireRate","a","angleTo","pl","splitter","turret","mapTop","spawnAboveMap","mapBottom","MAP_HEIGHT","WORLD_CEILING"],"version":3,"file":"index.24632edb.js.map"}