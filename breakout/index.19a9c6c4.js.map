{"mappings":"","sources":["src/breakout/classes/Ball.js"],"sourcesContent":["class Ball {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.speed = 3;\n    this.vel = createVector(this.speed, -this.speed);\n    this.r = 7;\n  }\n\n  render() {\n    push();\n    strokeWeight(3);\n    stroke('rebeccapurple');\n    fill('crimson');\n    circle(this.pos.x, this.pos.y, this.r * 2);\n    pop();\n  }\n\n  update() {\n    this.pos.add(this.vel);\n  }\n\n  colliding(brick) {\n    if (this.pos.x + this.r < brick.pos.x - brick.width / 2) {\n      return false;\n    } else if (this.pos.x - this.r > brick.pos.x + brick.width / 2) {\n      return false;\n    } else if (this.pos.y + this.r < brick.pos.y - brick.height / 2) {\n      return false;\n    } else if (this.pos.y - this.r > brick.pos.y + brick.height / 2) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  bounceOff(brick) {\n    this.vel.x *= -1;\n    this.update();\n\n    var prevVel = this.vel.copy();\n\n    if (this.colliding(brick)) {\n      //console.log(\"bounce\");\n      this.vel.x *= -1;\n      this.vel.y *= -1;\n    }\n    this.pos.sub(prevVel);\n  }\n\n  edges() {\n    if (this.pos.x > width - this.r) {\n      this.pos.x = width - this.r;\n      this.vel.x *= -1;\n    } else if (this.pos.x < this.r) {\n      this.pos.x = this.r;\n      this.vel.x *= -1;\n    } else if (this.pos.y < this.r) {\n      this.pos.y = this.r;\n      this.vel.y *= -1;\n    }\n  }\n\n  bounce(paddle) {\n    if (\n      this.pos.x > paddle.pos.x - paddle.width / 2 &&\n      this.pos.x < paddle.pos.x + paddle.width / 2 &&\n      this.pos.y + this.r > paddle.pos.y - paddle.height / 2 &&\n      this.pos.y < paddle.pos.y\n    ) {\n      let relativeX = map(this.pos.x, paddle.pos.x - paddle.width / 2, paddle.pos.x + paddle.width / 2, -1, 1);\n      this.vel.set(relativeX * this.speed, -this.speed);\n    }\n  }\n\n  end() {\n    if (this.pos.y > height) {\n      lives--;\n      this.reset();\n      paddle.reset();\n    }\n    if (lives <= 0) {\n      gameOver = true;\n      gameStarted = false;\n    }\n  }\n\n  won() {\n    if (bricks.length === 0) {\n      gameWon = true;\n      gameOver = false;\n      gameStarted = false;\n      gameInfo = false;\n    }\n  }\n\n  reset() {\n    this.pos.x = width / 2;\n    this.pos.y = height - 94;\n    this.vel.set(this.speed, -this.speed);\n  }\n}\n"],"names":[],"version":3,"file":"index.19a9c6c4.js.map"}