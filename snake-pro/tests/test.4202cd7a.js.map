{"mappings":"AAAA,MAAM,aAAa;IACjB,0BAA0B;QACxB,IAAI,MAAM;YAAC;YAAG;YAAG;YAAG;YAAG;SAAE;QACzB,GACE,MACA,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAM,KAAK,GAAG,CAAC,EAAE;IAE9C;IAEA,kBAAkB;QAChB,MAAM,QAAQ,MAAM,KAAK,CAAC;QAC1B,MAAM,SAAS,MAAM,KAAK,CAAC;QAC3B,GACE,MACA,MAAM,KAAK,CAAC,CAAC,GAAG,IAAM,KAAK,MAAM,CAAC,EAAE;QAEtC,MAAM,OAAO,CAAC;QACd,GACE,OACA,MAAM,KAAK,CAAC,CAAC,GAAG,IAAM,KAAK,MAAM,CAAC,EAAE;QAEtC,4BAA4B;QAC5B,GACE,MACA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,MAAS,IAAI,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE,GAAG;IAEjE;IAEA,kBAAkB;QAChB,IAAI,KAAK,MAAM,aAAa,CAAC;QAC7B,GACE,OACA,MAAM,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,IAAM,KAAK,EAAE,CAAC,EAAE;QAE7C,KAAK,MAAM,aAAa,CAAC;QACzB,GACE,OACA,MAAM,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,IAAM,KAAK,EAAE,CAAC,EAAE;IAE/C;AACF","sources":["src/snake-pro/tests/utils-tests.js"],"sourcesContent":["const utilsTests = {\n  'makes range of numbers': () => {\n    let exp = [0, 1, 2, 3, 4];\n    eq(\n      true,\n      utils.range(5).every((v, i) => v == exp[i]),\n    );\n  },\n\n  'shuffles array': () => {\n    const array = utils.range(100);\n    const array2 = utils.range(100);\n    eq(\n      true,\n      array.every((v, i) => v == array2[i]),\n    );\n    utils.shuffle(array);\n    eq(\n      false,\n      array.every((v, i) => v == array2[i]),\n    );\n    // No accidental duplication\n    eq(\n      true,\n      array.sort().every((v, i, arr) => (i > 0 ? v != arr[i - 1] : true)),\n    );\n  },\n\n  'shuffled range': () => {\n    let sr = utils.shuffledRange(100);\n    eq(\n      false,\n      utils.range(100).every((v, i) => v == sr[i]),\n    );\n    sr = utils.shuffledRange(200);\n    eq(\n      false,\n      utils.range(200).every((v, i) => v == sr[i]),\n    );\n  },\n};\n"],"names":[],"version":3,"file":"test.4202cd7a.js.map"}