{"mappings":"AAAA,MAAM,QAAQ;IACZ;;GAEC,GACD,SAAS,CAAC,KAAK,MAAQ,KAAK,KAAK,CAAC,KAAK,MAAM,KAAM,CAAA,MAAM,MAAM,CAAA,KAAM;IAErE;;GAEC,GACD,OAAO,CAAC,IACN,MAAM,GACH,IAAI,GACJ,GAAG,CAAC,CAAC,GAAG,IAAM;IAEnB;;GAEC,GACD,eAAe,CAAC;QACd,MAAM,IAAI,MAAM,KAAK,CAAC;QACtB,MAAM,OAAO,CAAC;QACd,OAAO;IACT;IAEA;;GAEC,GACD,SAAS,CAAC;QACR,IAAI,GAAG;QACP,IAAK,IAAI,IAAI,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,IAAK;YACvC,IAAI,MAAM,OAAO,CAAC,GAAG;YACrB,IAAI,GAAG,CAAC,EAAE;YACV,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE;YACf,GAAG,CAAC,EAAE,GAAG;QACX;IACF;AACF","sources":["src/snake-pro/src/utils.js"],"sourcesContent":["const utils = {\n  /**\n   * Returns a random integer between min and max (inclusive)\n   */\n  randInt: (min, max) => Math.floor(Math.random() * (max - min + 1)) + min,\n\n  /**\n   * Returns as Array of numbers 0 -> (n-1)\n   */\n  range: (n) =>\n    Array(n)\n      .fill()\n      .map((_, i) => i),\n\n  /**\n   * Returns as Array of numbers 0 -> (n-1)\n   */\n  shuffledRange: (n) => {\n    const r = utils.range(n);\n    utils.shuffle(r);\n    return r;\n  },\n\n  /**\n   * Shuffles array in place\n   */\n  shuffle: (arr) => {\n    let j, x;\n    for (let i = arr.length - 1; i > 0; i--) {\n      j = utils.randInt(0, i);\n      x = arr[i];\n      arr[i] = arr[j];\n      arr[j] = x;\n    }\n  },\n};\n"],"names":[],"version":3,"file":"index.6a3529bc.js.map"}