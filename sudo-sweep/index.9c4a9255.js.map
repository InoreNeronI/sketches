{"mappings":"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","sources":["src/sudo-sweep/Minesweeper.js"],"sourcesContent":["class Minesweeper {\n  constructor(x, y, w, h, subw, subh, font) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.subw = subw;\n    this.subh = subh;\n    this.size = w * h;\n    this.subsize = subw * subh;\n\n    this.grid;\n    this.visibility = [...Array(this.size * this.subw)].map((e) => Array(this.size * this.subw));\n    this.flagged = [...Array(this.size * this.subw)].map((e) => Array(this.size * this.subw));\n    this.exploded = false;\n    this.font = font;\n  }\n\n  setMines(sudoku) {\n    let grid = [...Array(this.size * this.subw)].map((e) => Array(8));\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        let mines = this.createMines(sudoku[i][j]);\n        grid = this.placeMines(grid, mines, i, j);\n      }\n    }\n    grid = this.getClues(grid);\n\n    this.grid = grid;\n  }\n\n  createMines(n) {\n    n -= 1; // modded for 0-8 instead of 1-9\n\n    let places = [];\n\n    for (let i = 0; i < this.subsize; i++) {\n      if (i < n) {\n        places.push('⁕');\n      } else {\n        places.push('');\n      }\n    }\n    return shuffle(places);\n  }\n\n  placeMines(grid, mines, x, y) {\n    for (let i = 0; i < this.subw; i++) {\n      for (let j = 0; j < this.subh; j++) {\n        const x2 = x * this.subw + i;\n        const y2 = y * this.subh + j;\n\n        grid[x2][y2] = mines[j * this.subw + i];\n      }\n    }\n    return grid;\n  }\n\n  getClues(grid) {\n    for (let i = 0; i < this.size * this.subw; i++) {\n      for (let j = 0; j < this.size * this.subh; j++) {\n        if (grid[i][j] === '⁕') {\n          continue;\n        }\n        const neighbours = this.getNeighbours(grid, i, j);\n\n        if (neighbours != 0) {\n          grid[i][j] = neighbours;\n        }\n      }\n    }\n    return grid;\n  }\n\n  getNeighbours(grid, x, y) {\n    let neighbours = 0;\n\n    for (let i = x - 1; i <= x + 1; i++) {\n      for (let j = y - 1; j <= y + 1; j++) {\n        if (i === x && j === y) {\n          continue;\n        }\n        if (i < 0 || i >= this.size * this.subw || j < 0 || j >= this.size * this.subh) {\n          continue;\n        }\n        if (grid[i][j] === '⁕') {\n          neighbours += 1;\n        }\n      }\n    }\n    return neighbours;\n  }\n\n  draw(x, y) {\n    push();\n    translate(this.x, this.y);\n\n    const cellSize = 60 / this.subw;\n\n    for (let i = 0; i < this.size * this.subw; i++) {\n      for (let j = 0; j < this.size * this.subh; j++) {\n        const x = i * cellSize;\n        const y = (j * 60) / this.subh;\n        const number = this.grid[i][j];\n\n        if (this.visibility[i][j] && !(this.flagged[i][j] && number === '⁕')) {\n          fill('#DBEBE9');\n        } else {\n          fill(white);\n        }\n        stroke(dark);\n        strokeWeight(1);\n        rect(x, y, cellSize, 60 / this.subh);\n\n        noStroke();\n        textAlign(CENTER, CENTER);\n        textFont(this.font);\n\n        if (number === '⁕') {\n          fill(dark);\n          textSize(cellSize);\n        } else {\n          fill(dark);\n          textSize(cellSize * 0.75);\n        }\n        if (this.flagged[i][j] && !(this.visibility[i][j] && number != '⁕')) {\n          fill(mid);\n          textSize(cellSize * 0.75);\n          text('?', x + cellSize / 2, y + 60 / this.subh / 2 + 2);\n        } else if (this.visibility[i][j]) {\n          if (number === '⁕') {\n            text('*', x + cellSize / 2, y + 60 / this.subh / 2 + 2);\n          } else {\n            text(number, x + cellSize / 2, y + 60 / this.subh / 2 + 2);\n          }\n        }\n      }\n    }\n    this.drawGuidelines(cellSize);\n    pop();\n  }\n\n  drawGuidelines(cellSize) {\n    cellSize *= this.subw;\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        const x = i * cellSize;\n        const y = j * cellSize;\n\n        noFill();\n        stroke(mid);\n        strokeWeight(3);\n        rect(x, y, cellSize, cellSize);\n      }\n    }\n    noFill();\n    stroke(dark);\n    strokeWeight(4);\n\n    rect(0, 0, cellSize * this.size, cellSize * this.size);\n    rect(cellSize * this.w, 0, cellSize * this.w, cellSize * this.size);\n    rect(0, cellSize * this.h, cellSize * this.size, cellSize * this.h);\n  }\n\n  clicked(x, y) {\n    x -= this.x;\n    y -= this.y;\n\n    let cellSize = 60 / this.subw;\n\n    for (let i = 0; i < this.size * this.subw; i++) {\n      for (let j = 0; j < this.size * this.subh; j++) {\n        if (x > i * cellSize && x < i * cellSize + cellSize) {\n          if (y > (j * 60) / this.subh && y < (j * 60) / this.subh + 60 / this.subh) {\n            if (startTime === '') {\n              startTime = new Date();\n              startTime = startTime.getTime();\n            }\n            if (mouseButton === LEFT && !this.flagged[i][j]) {\n              if (this.grid[i][j] === '⁕') {\n                this.explode();\n                lose = true;\n              } else if (this.grid[i][j] === '') {\n                this.visibility[i][j] = true;\n                this.freeNeighbours(i, j);\n              } else {\n                this.visibility[i][j] = true;\n              }\n            } else if (mouseButton != LEFT && !this.visibility[i][j]) {\n              this.flagged[i][j] = !this.flagged[i][j];\n            }\n            if (mouseButton === LEFT) {\n              this.chord(i, j);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  explode() {\n    for (let i = 0; i < this.size * this.subw; i++) {\n      for (let j = 0; j < this.size * this.subh; j++) {\n        this.visibility[i][j] = true;\n        this.exploded = true;\n      }\n    }\n  }\n\n  freeNeighbours(x, y) {\n    for (let i = x - 1; i <= x + 1; i++) {\n      for (let j = y - 1; j <= y + 1; j++) {\n        if (i === x && j === y) {\n          continue;\n        } else if (i < 0 || j < 0 || i >= this.size * this.subw || j >= this.size * this.subh) {\n          continue;\n        }\n        if (!this.visibility[i][j]) {\n          this.visibility[i][j] = true;\n\n          if (this.grid[i][j] === '') {\n            this.freeNeighbours(i, j);\n          }\n        }\n      }\n    }\n  }\n\n  chord(i, j) {\n    if (this.flaggedNeighbours(i, j) === this.grid[i][j]) {\n      this.chordNeighbours(i, j);\n    }\n  }\n\n  flaggedNeighbours(x, y) {\n    let neighbours = 0;\n\n    for (let i = x - 1; i <= x + 1; i++) {\n      for (let j = y - 1; j <= y + 1; j++) {\n        if (i === x && j === y) {\n          continue;\n        }\n        if (i < 0 || i >= this.size * this.subw || j < 0 || j >= this.size * this.subh) {\n          continue;\n        }\n        if (this.flagged[i][j] && !this.visibility[i][j]) {\n          neighbours += 1;\n        }\n      }\n    }\n    return neighbours;\n  }\n\n  chordNeighbours(x, y) {\n    for (let i = x - 1; i <= x + 1; i++) {\n      for (let j = y - 1; j <= y + 1; j++) {\n        if (i >= 0 && j >= 0 && i < this.size * this.subw && j < this.size * this.subh) {\n          if (this.flagged[i][j]) {\n            // continue;\n          } else if (this.grid[i][j] === '⁕') {\n            this.explode();\n          } else if (this.grid[i][j] === '') {\n            this.visibility[i][j] = true;\n            this.freeNeighbours(i, j);\n          } else {\n            this.visibility[i][j] = true;\n          }\n        }\n      }\n    }\n  }\n\n  validate() {\n    if (this.exploded) {\n      return false;\n    }\n    for (let i = 0; i < this.size * this.subw; i++) {\n      for (let j = 0; j < this.size * this.subh; j++) {\n        if (!this.visibility[i][j] && this.grid[i][j] !== '⁕') {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n}\n"],"names":[],"version":3,"file":"index.9c4a9255.js.map"}