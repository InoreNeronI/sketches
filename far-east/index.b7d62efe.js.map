{"mappings":"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","sources":["src/far-east/main.ts","p5ex.js","src/far-east/settings.ts","CreativeCodingCore.js","src/far-east/fonts.ts","src/far-east/sound.ts","p5.js","src/far-east/game/index.ts","src/far-east/game/core/game-core.ts","src/far-east/game/core/actor/index.ts","src/far-east/game/core/actor/actor.ts","src/far-east/game/core/actor/fire.ts","src/far-east/game/core/actor/type.ts","src/far-east/game/core/actor/group.ts","src/far-east/game/core/actor-types.ts","src/far-east/game/enemy-slot.ts"],"sourcesContent":["import p5 from 'p5';\n\nimport {\n  startSketch,\n  p,\n  canvas,\n  createPixels,\n  replaceCanvasPixels,\n  // pauseOrResume,\n  MoveKeys,\n  Mouse,\n} from '@fal-works/p5-extension';\n\nimport { HTML_ELEMENT, LOGICAL_CANVAS_SIZE, ENABLE_CANVAS_SCALING } from './settings';\n\nimport * as Fonts from './fonts';\nimport * as Sounds from './sound';\nimport * as Game from './game';\n\n// ---- variables | functions ----\n\nlet drawBackground: () => void;\nlet volumeSlider: p5.Element;\nlet gameIsStarted = false;\n\n// ---- reset & initialize ----\n\nconst prelaod = (): void => {\n  Fonts.load(p, {\n    jp: 'NotoSerifJP-Medium-subset.otf',\n    en: 'NotoSerifJP-Bold-subset.otf',\n  });\n\n  Sounds.load(p, {\n    music: 'WELCOMEB4CK.ogg',\n    gunSound: 'submachinegun1_edit.wav',\n    bombSound: 'bomb2_edit.wav',\n    preAppearanceSound: 'enemy-advent1.wav',\n    appearanceSound: 'punch-high2.wav',\n    damageSound: 'cannon1_edit.wav',\n  });\n};\n\nconst reset = (): void => {\n  Game.reset(gameIsStarted);\n};\n\nconst updateVolume = () => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Sounds.setVolume((volumeSlider.value() as any as number) * 0.01);\n};\n\nconst initializeVolumeSlider = () => {\n  volumeSlider = p.createSlider(0, 100, 15, 5);\n  volumeSlider.position(canvas.scaleFactor * 50, canvas.scaleFactor * (canvas.logicalSize.height - 40));\n  volumeSlider.style('width', `${canvas.scaleFactor * 200}px`);\n  volumeSlider.style('height', `${canvas.scaleFactor * 25}px`);\n  updateVolume();\n};\n\nconst initialize = (): void => {\n  const backgroundPixels = createPixels(() => {\n    canvas.drawScaled(() => {\n      const { width, height } = LOGICAL_CANVAS_SIZE;\n      p.background(248);\n      p.stroke(128, 112, 96, 4);\n      p.strokeCap(p.SQUARE);\n      p.strokeWeight(20);\n      for (let i = 0; i < 2000; i += 1) {\n        const x = p.random(0, width);\n        const y = p.random(-50, height - 50);\n        p.line(x, y, x, y + p.random(50, 200));\n      }\n    });\n  });\n  drawBackground = () => replaceCanvasPixels(backgroundPixels);\n\n  p.imageMode(p.CENTER);\n  p.textFont(Fonts.en);\n\n  initializeVolumeSlider();\n\n  reset();\n};\n\n// ---- draw ----\n\nconst drawInstruction = () => {\n  p.push();\n\n  p.textFont(Fonts.en, 24);\n  p.textAlign(p.LEFT);\n\n  p.text('ARROW / WASD :', 160, 500);\n  p.text('MOVE', 460, 500);\n  p.text('Z / J / SPACE / ENTER :', 160, 540);\n  p.text('SHOOT', 460, 540);\n\n  p.text('PRESS SPACE KEY TO START', 160, 600);\n\n  p.pop();\n};\n\nconst drawSketch = (): void => {\n  Game.run();\n\n  if (!gameIsStarted) drawInstruction();\n\n  p.textFont(Fonts.en, 16);\n  p.textAlign(p.LEFT);\n  p.text('VOL', 10, canvas.logicalSize.height - 23);\n};\n\nconst draw = (): void => {\n  drawBackground();\n  canvas.drawScaled(drawSketch);\n  updateVolume();\n};\n\n// ---- UI ----\n\nconst keyTyped = (): void => {\n  switch (p.key) {\n    // case \"p\":\n    //   pauseOrResume();\n    //   break;\n    case 'g':\n      p.save('image.png');\n      break;\n  }\n\n  if (!gameIsStarted && p.keyCode === 32) {\n    Game.reset(true);\n    gameIsStarted = true;\n  }\n\n  if (Game.state === Game.State.RESULT) Game.reset(true);\n};\n\n// ---- start sketch ----\n\nconst setP5Methods = (p: p5): void => {\n  p.preload = prelaod;\n  p.draw = draw;\n  p.mouseMoved = () => {\n    Mouse.updatePosition();\n    Mouse.onMoved();\n  };\n  p.mousePressed = Mouse.onPressed;\n  p.keyTyped = keyTyped;\n  p.keyPressed = () => {\n    MoveKeys.onPressed();\n    if (MoveKeys.up || MoveKeys.left || MoveKeys.down || MoveKeys.right) return false;\n  };\n  p.keyReleased = () => {\n    MoveKeys.onReleased();\n  };\n};\n\nstartSketch({\n  htmlElement: HTML_ELEMENT,\n  logicalCanvasSize: LOGICAL_CANVAS_SIZE,\n  initialize,\n  setP5Methods,\n  fittingOption: ENABLE_CANVAS_SCALING ? undefined : null,\n});\n","module.exports=p5ex;","import { HtmlUtility, RectangleSize } from '@fal-works/creative-coding-core';\n\n/**\n * The id of the HTML element to which the canvas should belong.\n */\nexport const HTML_ELEMENT_ID = 'FarEast';\n\n/**\n * The HTML element to which the canvas should belong.\n */\nexport const HTML_ELEMENT = HtmlUtility.getElementOrBody(HTML_ELEMENT_ID);\n\n/**\n * The logical size of the canvas.\n */\nexport const LOGICAL_CANVAS_SIZE: RectangleSize.Unit = {\n  width: 800,\n  height: 800,\n};\n\n/**\n * If music should be enabled.\n */\nexport const ENABLE_MUSIC = true;\n\n/**\n * If canvas should be scaled so that it fits to the parent HTML element.\n */\nexport const ENABLE_CANVAS_SCALING = true;\n\n/**\n * The directory path of assets.\n */\nexport const ASSETS_DIRECTORY_PATH = '../assets/far-east';\n","module.exports=CreativeCodingCore;","import p5 from 'p5';\nimport { ASSETS_DIRECTORY_PATH as ASSETS } from './settings';\n\nexport let jp: p5.Font;\nexport let en: p5.Font;\n\nconst setJp = (font: p5.Font) => (jp = font);\nconst setEn = (font: p5.Font) => (en = font);\n\nexport const load = (\n  p: p5,\n  files: {\n    jp: string;\n    en: string;\n  },\n): void => {\n  p.loadFont(`${ASSETS}/${files.jp}`, setJp);\n  p.loadFont(`${ASSETS}/${files.en}`, setEn);\n};\n","import p5 from 'p5';\nimport 'p5/lib/addons/p5.sound';\n\nimport { ENABLE_MUSIC, ASSETS_DIRECTORY_PATH as ASSETS } from './settings';\n\nlet volume = 0;\nlet music: p5.SoundFile;\nlet gunSound: p5.SoundFile;\nlet bombSound: p5.SoundFile;\nlet preAppearanceSound: p5.SoundFile;\nlet appearanceSound: p5.SoundFile;\nlet damageSound: p5.SoundFile;\n\nconst createLoadFile = (p: p5) => {\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  const p5Sound = p as any as p5.SoundFile;\n\n  return (file: string): p5.SoundFile => p5Sound.loadSound(`${ASSETS}/${file}`);\n};\n\nexport const load = (\n  p: p5,\n  files: {\n    music: string;\n    gunSound: string;\n    bombSound: string;\n    preAppearanceSound: string;\n    appearanceSound: string;\n    damageSound: string;\n  },\n) => {\n  const loadFile = createLoadFile(p);\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  const pAny = p as any;\n\n  if (ENABLE_MUSIC) {\n    pAny.soundFormats('ogg', 'mp3');\n\n    music = loadFile(files.music);\n    music.setLoop(true);\n  }\n\n  pAny.soundFormats('wav');\n\n  gunSound = loadFile(files.gunSound);\n  gunSound.setLoop(true);\n\n  bombSound = loadFile(files.bombSound);\n  preAppearanceSound = loadFile(files.preAppearanceSound);\n  appearanceSound = loadFile(files.appearanceSound);\n  damageSound = loadFile(files.damageSound);\n\n  const tmpDiv = p.createDiv();\n  tmpDiv.position(0, 0);\n  pAny.userStartAudio().then(() => tmpDiv.remove());\n};\n\nconst playMusic = () => {\n  if (ENABLE_MUSIC) music.play();\n};\n\nconst stopMusic = () => {\n  if (ENABLE_MUSIC) music.stop();\n};\n\nexport const setVolume = (vol: number) => {\n  if (ENABLE_MUSIC) music.setVolume(vol);\n  gunSound.setVolume(0.25 * vol);\n  bombSound.setVolume(0.65 * vol);\n  preAppearanceSound.setVolume(0.3 * vol);\n  appearanceSound.setVolume(0.5 * vol);\n  damageSound.setVolume(1.0 * vol);\n\n  if (volume === 0 && vol > 0) playMusic();\n  else if (volume > 0 && vol === 0) stopMusic();\n\n  volume = vol;\n};\n\nexport const playGunSound = () => {\n  if (!gunSound.isPlaying()) gunSound.play();\n};\nexport const stopGunSound = () => {\n  if (gunSound.isPlaying()) gunSound.stop();\n};\n\nconst playRestart = (sound: p5.SoundFile) => {\n  if (sound.isPlaying()) sound.stop();\n  sound.play();\n};\n\nexport const playBombSound = () => playRestart(bombSound);\nexport const playPreAppearanceSound = () => playRestart(preAppearanceSound);\nexport const playAppearanceSound = () => playRestart(appearanceSound);\nexport const playDamageSound = () => playRestart(damageSound);\n","module.exports=p5;","import { Math as Math2, Timer, Random, Easing } from '@fal-works/creative-coding-core';\nimport { p, canvas, setShake, applyShake, drawTransformed } from '@fal-works/p5-extension';\nimport * as Core from './core/game-core';\nimport * as ActorTypes from './core/actor-types';\nimport * as EnemySlot from './enemy-slot';\nimport * as Actor from './core/actor';\nimport * as Sound from '../sound';\nconst enum ShakeType {\n  VERTICAL = 'VERTICAL',\n  HORIZONTAL = 'HORIZONTAL',\n}\n\nlet score = 0;\n\nexport const enum State {\n  PLAYING = 'PLAYING',\n  RESULT = 'RESULT',\n}\n\nexport let state = State.PLAYING;\n\nconst timerSet = Timer.Set.create(64);\n\nconst fireParticles = (x: number, y: number, count: number, maxPositionOffset: number, maxSpeed: number) => {\n  for (let i = 0; i < count; i += 1)\n    Core.fireParticle(\n      x + Random.between(-maxPositionOffset, maxPositionOffset),\n      y + Random.between(-maxPositionOffset, maxPositionOffset),\n      Random.between(5, maxSpeed),\n      Random.angle(),\n      ActorTypes.randomParticle(),\n    );\n};\n\nconst addAppearanceParticle = (x: number, y: number, bearing: number) => {\n  const index = Core.useParticle(0, 0, ActorTypes.randomParticle());\n  if (index == null) return;\n\n  Core.overrideParticleBehavior(index, (data, i) => {\n    const frameCount = data.frameCount[i];\n    const progressRatio = frameCount / 60;\n\n    data.rotationAngle[i] -= 0.3;\n    data.scaleFactor[i] = 5 * Easing.easeInQuad(progressRatio);\n\n    const currentDistance = (1 - progressRatio) * 100;\n    const currentBearing = bearing + frameCount * 0.1;\n    data.x[i] = x + currentDistance * Math.cos(currentBearing);\n    data.y[i] = y + currentDistance * Math.sin(currentBearing);\n\n    if (frameCount > 60) Core.killParticle(i);\n  });\n};\n\nconst addAppearanceEffect = (x: number, y: number) => {\n  for (let i = 0; i < 8; i += 1) addAppearanceParticle(x, y, (i / 8) * Math2.TWO_PI);\n};\n\nconst addEnemy = (slot: EnemySlot.Unit) => {\n  const { x, y } = slot;\n  addAppearanceEffect(x, y);\n  Timer.Set.addTimer(\n    timerSet,\n    Timer.create(60, undefined, () => {\n      const index = Core.useEnemy(x, y, ActorTypes.randomEnemy());\n      if (index === null) return;\n\n      slot.index = index;\n      slot.state = EnemySlot.State.ACTIVE;\n\n      fireParticles(x, y, 32, 30, 30);\n      Sound.playAppearanceSound();\n    }),\n  );\n\n  slot.state = EnemySlot.State.APPROACHING;\n  Sound.playPreAppearanceSound();\n};\n\nexport const reset = (playable: boolean = true) => {\n  score = 0;\n  state = State.PLAYING;\n  Timer.Set.clear(timerSet);\n\n  Core.reset();\n  Core.createPlayer(ActorTypes.player);\n  if (!playable) Core.killPlayer();\n\n  EnemySlot.reset(addEnemy);\n};\n\nconst onHitEnemy: Actor.Group.OnCollideCallback = (playerBullet, playerBulletIndex, enemy, enemyIndex) => {\n  const x = playerBullet.soa.data.x[playerBulletIndex];\n  const y = playerBullet.soa.data.y[playerBulletIndex];\n  Actor.Group.kill(playerBullet, playerBulletIndex);\n\n  if (Random.bool(0.2)) fireParticles(x, y, 1, 5, 15);\n\n  const enemyLife = (enemy.soa.data.life[enemyIndex] -= 1);\n  enemy.soa.data.damagedRemainingCount[enemyIndex] = 2;\n\n  score += 10;\n\n  if (enemyLife <= 0) {\n    Core.killEnemy(enemyIndex);\n    fireParticles(x, y, 64, 50, 35);\n    score += 8000;\n    setShake(0.05, 0.8, ShakeType.VERTICAL);\n    Sound.playBombSound();\n  }\n};\n\nconst onHitPlayer: Actor.Group.OnCollideCallback = (enemyBullet, enemyBulletIndex, player, playerIndex) => {\n  const x = enemyBullet.soa.data.x[enemyBulletIndex];\n  const y = enemyBullet.soa.data.y[enemyBulletIndex];\n  Actor.Group.kill(enemyBullet, enemyBulletIndex);\n\n  const playerLife = (player.soa.data.life[playerIndex] -= 1);\n  player.soa.data.damagedRemainingCount[playerIndex] = 180;\n\n  if (playerLife > 0) {\n    fireParticles(x, y, 64, 30, 30);\n    setShake(0.1, 0.9, ShakeType.HORIZONTAL, true);\n  } else {\n    Core.killPlayer();\n    fireParticles(x, y, 128, 50, 30);\n    setShake(0.2, 0.95, ShakeType.HORIZONTAL, true);\n    state = State.RESULT;\n  }\n\n  Sound.playDamageSound();\n\n  Core.breakEnemyBullets((x, y) => Core.fireParticle(x, y, 0, 0, ActorTypes.randomParticle()));\n};\n\nconst drawLife = () => {\n  const extraLifeCount = Math.max(0, Core.getPlayerLife() - 1);\n\n  let x = 30;\n  const y = 30;\n  for (let i = 0; i < extraLifeCount; i += 1) {\n    drawTransformed(ActorTypes.drawPlayerGraphics, x, y, -Math2.HALF_PI, 0.5);\n    x += 60;\n  }\n};\n\nconst drawScore = () => {\n  p.textSize(24);\n  p.textAlign(p.RIGHT);\n  p.text(`SCORE: ${p.nfc(score, 0)}`, canvas.logicalSize.width - 20, 40);\n};\n\nconst drawResult = () => {\n  p.textAlign(p.CENTER);\n  p.textSize(64);\n  p.text('RESULT', canvas.logicalCenterPosition.x, canvas.logicalCenterPosition.y);\n  p.textSize(96);\n  p.text(p.nfc(score, 0), canvas.logicalCenterPosition.x, canvas.logicalCenterPosition.y + 128);\n};\n\nexport const run = () => {\n  applyShake();\n  Core.runAndDraw();\n  Core.checkPlayerBulletCollision(onHitEnemy);\n  Core.checkEnemyBulletCollision(onHitPlayer);\n\n  Timer.Set.step(timerSet);\n\n  EnemySlot.update(addEnemy);\n\n  switch (state) {\n    case State.PLAYING:\n      drawScore();\n      drawLife();\n      break;\n    case State.RESULT:\n      drawResult();\n      break;\n  }\n};\n","import { Math as Math2, ArrayUtility } from '@fal-works/creative-coding-core';\nimport * as Actor from './actor';\nimport { LOGICAL_CANVAS_SIZE } from '../../settings';\nimport * as Sound from '../../sound';\n\nlet frameCount = 0;\n\nconst playerGroup = Actor.Group.create(1);\nexport let playerIsActive = false;\nexport const createPlayer = (type: Actor.Type) => {\n  Actor.Group.use(playerGroup, 0.5 * LOGICAL_CANVAS_SIZE.width, LOGICAL_CANVAS_SIZE.height - 100, 0, 0, -Math2.HALF_PI, type);\n  playerIsActive = true;\n};\nexport const killPlayer = () => {\n  Actor.Group.kill(playerGroup, 0);\n  playerIsActive = false;\n  Sound.stopGunSound();\n};\nexport const getPlayerLife = () => (playerIsActive ? playerGroup.soa.data.life[0] : 0);\n\nconst playerX = playerGroup.soa.data.x;\nconst playerY = playerGroup.soa.data.y;\nexport const getDirectionToPlayer = (x: number, y: number) => {\n  const xDifference = playerX[0] - x;\n  const yDifference = playerY[0] - y;\n  if (xDifference === 0 && yDifference === 0) return 0;\n  return Math.atan2(yDifference, xDifference);\n};\n\nconst playerBulletGroup = Actor.Group.create(128);\n\nconst fire =\n  (group: Actor.Group.Unit): Actor.FireCallback =>\n  (x, y, speed, directionAngle, type) =>\n    Actor.Group.use(group, x, y, speed * Math.cos(directionAngle), speed * Math.sin(directionAngle), directionAngle, type);\n\nexport const firePlayerBullet = fire(playerBulletGroup);\n\nconst enemyGroup = Actor.Group.create(32);\nexport let enemyCount = 0;\nexport const useEnemy = (x: number, y: number, type: Actor.Type) => {\n  const index = Actor.Group.use(enemyGroup, x, y, 0, 0, Math2.HALF_PI, type);\n  if (index != null) enemyCount += 1;\n  return index;\n};\nexport const killEnemy = (index: number) => {\n  Actor.Group.kill(enemyGroup, index);\n  enemyCount -= 1;\n};\nexport const enemyIsActive = (index: number) => enemyGroup.soa.data.active[index];\n\nconst enemyBulletGroup = Actor.Group.create(1024);\nexport const fireEnemyBullet = fire(enemyBulletGroup);\n\nconst particleGroup = Actor.Group.create(256);\nexport const useParticle = (x: number, y: number, type: Actor.Type) => Actor.Group.use(particleGroup, x, y, 0, 0, 0, type);\nexport const fireParticle = fire(particleGroup);\n\nexport const killParticle = (index: number) => Actor.Group.kill(particleGroup, index);\n\nexport const overrideParticleBehavior = (index: number, run: Actor.RunCallback) => {\n  particleGroup.soa.data.run[index] = run;\n};\n\nconst actorGroups: readonly Actor.Group.Unit[] = [particleGroup, playerGroup, enemyGroup, playerBulletGroup, enemyBulletGroup];\n\nexport const runAndDraw = () => {\n  ArrayUtility.loop(actorGroups, Actor.Group.runAndDraw);\n  frameCount += 1;\n};\n\nexport const reset = () => {\n  frameCount = 0;\n  ArrayUtility.loop(actorGroups, Actor.Group.reset);\n};\n\nexport const checkPlayerBulletCollision = (onHitEnemy: Actor.Group.OnCollideCallback) =>\n  Actor.Group.checkCollision(playerBulletGroup, enemyGroup, onHitEnemy);\n\nexport const checkEnemyBulletCollision = (onHitPlayer: Actor.Group.OnCollideCallback) => {\n  if (frameCount % 2 === 0) return;\n  if (playerGroup.soa.data.damagedRemainingCount[0] > 0) return;\n\n  Actor.Group.checkCollision(enemyBulletGroup, playerGroup, onHitPlayer);\n};\n\nexport const breakEnemyBullets = (fireParticle: (x: number, y: number) => void) => Actor.Group.breakActors(enemyBulletGroup, fireParticle);\n","export * from './actor';\nexport * from './fire';\nexport * from './type';\n\nimport * as Group from './group';\nexport { Group };\n","import { StructureOfArrays } from '@fal-works/creative-coding-core';\n\nexport type RunCallback = (data: StructureOfArrays.Data<Unit>, index: number) => void;\n\nexport interface Unit {\n  active: boolean;\n  frameCount: number;\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  rotationAngle: number;\n  scaleFactor: number;\n  drawGraphics: () => void;\n  drawGraphicsDamaged: (() => void) | null;\n  run: RunCallback;\n  collisionDistance: number;\n  life: number;\n  damagedRemainingCount: number;\n}\n","import { Type } from './type';\n\nexport type FireCallback = (x: number, y: number, speed: number, directionAngle: number, type: Type) => number | null;\n","import * as Actor from './actor';\n\nexport interface Type {\n  draw: () => void;\n  drawDamaged?: () => void;\n  run: Actor.RunCallback;\n  collisionDistance: number;\n  maxLife: number;\n}\n","import { StructureOfArrays, RectangleRegion } from '@fal-works/creative-coding-core';\nimport { drawTransformed, canvas } from '@fal-works/p5-extension';\nimport * as Actor from './actor';\nimport { Type } from './type';\n\nexport interface Unit {\n  readonly soa: StructureOfArrays.Unit<Actor.Unit>;\n  startIndex: number;\n  endIndex: number;\n}\n\nexport const create = (capacity: number): Unit => {\n  const prototypeStructure: Actor.Unit = {\n    active: false,\n    frameCount: 0,\n    x: 0,\n    y: 0,\n    vx: 0,\n    vy: 0,\n    rotationAngle: 0,\n    scaleFactor: 1,\n    drawGraphics: () => {},\n    drawGraphicsDamaged: null,\n    run: () => {},\n    collisionDistance: 0,\n    life: 0,\n    damagedRemainingCount: 0,\n  };\n\n  return {\n    soa: StructureOfArrays.from(prototypeStructure, capacity),\n    startIndex: Infinity,\n    endIndex: 0,\n  };\n};\n\n/**\n * Activates an actor unit.\n * @param group\n * @param x\n * @param y\n * @param vx\n * @param vy\n * @param angle\n * @param type\n * @return `true` if succeeded.\n */\nexport const use = (group: Unit, x: number, y: number, vx: number, vy: number, angle: number, type: Type) => {\n  const { data, length } = group.soa;\n  const { active } = data;\n\n  for (let i = 0; i < length; i += 1) {\n    if (active[i]) continue;\n\n    active[i] = true;\n    data.x[i] = x;\n    data.y[i] = y;\n    data.vx[i] = vx;\n    data.vy[i] = vy;\n    data.rotationAngle[i] = angle;\n    data.scaleFactor[i] = 1;\n    data.run[i] = type.run;\n    data.drawGraphics[i] = type.draw;\n    data.drawGraphicsDamaged[i] = type.drawDamaged || null;\n    data.collisionDistance[i] = type.collisionDistance;\n    data.life[i] = type.maxLife;\n    data.frameCount[i] = 0;\n    data.damagedRemainingCount[i] = 0;\n\n    if (i < group.startIndex) group.startIndex = i;\n    if (i >= group.endIndex) group.endIndex = i + 1;\n\n    return i;\n  }\n\n  return null;\n};\n\nconst findFirstActive = (active: boolean[], startIndex: number, endIndex: number) => {\n  for (let i = startIndex; i < endIndex; i += 1) {\n    if (active[i]) return i;\n  }\n\n  return Infinity;\n};\n\nconst findLastActive = (active: boolean[], startIndex: number, endIndex: number) => {\n  for (let i = endIndex - 1; i >= startIndex; i -= 1) {\n    if (active[i]) return i;\n  }\n\n  return -1;\n};\n\n/**\n * Kills an actor unit.\n * @param group\n * @param index\n * @return `true` if killed. `false` if already inactive.\n */\nexport const kill = (group: Unit, index: number) => {\n  const { soa, startIndex, endIndex } = group;\n  const { active } = soa.data;\n\n  if (!active[index]) return false;\n\n  active[index] = false;\n\n  if (index === startIndex) group.startIndex = findFirstActive(active, startIndex + 1, endIndex);\n\n  if (index === endIndex) group.endIndex = findLastActive(active, group.startIndex, endIndex - 1) + 1;\n\n  return true;\n};\n\nexport const runAndDraw = (group: Unit) => {\n  const { soa, startIndex, endIndex } = group;\n\n  if (startIndex >= soa.length) return;\n\n  const { data } = soa;\n  const {\n    active,\n    frameCount,\n    drawGraphics,\n    drawGraphicsDamaged: drawGraphicsAlternative,\n    x,\n    y,\n    vx,\n    vy,\n    run,\n    rotationAngle,\n    scaleFactor,\n    damagedRemainingCount,\n  } = data;\n  const tmpPosition = { x: 0, y: 0 };\n\n  for (let i = startIndex; i < endIndex; i += 1) {\n    if (!active[i]) continue;\n\n    run[i](data, i);\n\n    tmpPosition.x = x[i] += vx[i];\n    tmpPosition.y = y[i] += vy[i];\n\n    if (!RectangleRegion.containsPoint(canvas.logicalRegion, tmpPosition, -100)) {\n      kill(group, i);\n      continue;\n    }\n\n    const thisScaleFactor = scaleFactor[i];\n    const drawDamaged = drawGraphicsAlternative[i];\n    const damaged = damagedRemainingCount[i] > 0;\n    if (thisScaleFactor > 0)\n      drawTransformed(\n        damaged && drawDamaged && frameCount[i] % 4 < 2 ? drawDamaged : drawGraphics[i],\n        x[i],\n        y[i],\n        rotationAngle[i],\n        thisScaleFactor,\n      );\n\n    if (damaged) damagedRemainingCount[i] -= 1;\n    frameCount[i] += 1;\n  }\n};\n\nexport const reset = (group: Unit) => {\n  const { active, run, drawGraphics, drawGraphicsDamaged } = group.soa.data;\n\n  const emptyFunction = () => {};\n\n  for (let i = 0, len = group.soa.length; i < len; i += 1) {\n    active[i] = false;\n    run[i] = emptyFunction;\n    drawGraphics[i] = emptyFunction;\n    drawGraphicsDamaged[i] = null;\n  }\n\n  group.startIndex = Infinity;\n  group.endIndex = 0;\n\n  return group;\n};\n\nexport const breakActors = (group: Unit, fireParticle: (x: number, y: number) => void) => {\n  const { active, x, y, run, drawGraphics, drawGraphicsDamaged } = group.soa.data;\n\n  const emptyFunction = () => {};\n\n  for (let i = 0, len = group.soa.length; i < len; i += 1) {\n    if (!active[i]) continue;\n\n    fireParticle(x[i], y[i]);\n\n    active[i] = false;\n    run[i] = emptyFunction;\n    drawGraphics[i] = emptyFunction;\n    drawGraphicsDamaged[i] = null;\n  }\n\n  group.startIndex = Infinity;\n  group.endIndex = 0;\n\n  return group;\n};\n\nexport type OnCollideCallback = (group: Unit, index: number, otherGroup: Unit, otherIndex: number) => void;\n\n/**\n * A pretty naive function for collision checking.\n * @param group\n * @param otherGroup\n * @param onCollide\n */\nexport const checkCollision = (group: Unit, otherGroup: Unit, onCollide: OnCollideCallback) => {\n  const data = group.soa.data;\n  const otherData = otherGroup.soa.data;\n  const { active, x, y, collisionDistance } = data;\n  const otherActive = otherData.active;\n  const otherX = otherData.x;\n  const otherY = otherData.y;\n  const otherCollisionDistance = otherData.collisionDistance;\n\n  for (let index = group.startIndex; index < group.endIndex; index += 1) {\n    if (!active[index]) continue;\n    const thisX = x[index];\n    const thisY = y[index];\n    const thisCollisionDistance = collisionDistance[index];\n    for (let otherIndex = otherGroup.startIndex; otherIndex < otherGroup.endIndex; otherIndex += 1) {\n      if (!otherActive[otherIndex]) continue;\n      const distanceThreshold = thisCollisionDistance + otherCollisionDistance[otherIndex];\n\n      const actualDistanceX = Math.abs(thisX - otherX[otherIndex]);\n      if (actualDistanceX > distanceThreshold) continue;\n\n      const actualDistanceY = Math.abs(thisY - otherY[otherIndex]);\n      if (actualDistanceY > distanceThreshold) continue;\n\n      onCollide(group, index, otherGroup, otherIndex);\n    }\n  }\n};\n","import p5 from 'p5';\nimport { Math as Math2, Random, Easing } from '@fal-works/creative-coding-core';\nimport { p, graphicsToImage, onSetup, KeyBoard, MoveKeys, canvas } from '@fal-works/p5-extension';\nimport * as Fonts from '../../fonts';\nimport * as Actor from './actor';\nimport * as GameCore from './game-core';\nimport * as Sound from '../../sound';\n\nexport let player: Actor.Type;\nexport let drawPlayerGraphics: () => void;\nlet enemies: readonly Actor.Type[];\nexport const randomEnemy = () => Random.fromArray(enemies);\nexport let playerBullet: Actor.Type;\nexport let enemyBullet: Actor.Type;\nlet particles: readonly Actor.Type[];\nexport const randomParticle = () => Random.fromArray(particles);\n\ntype Direction = 0 | 1 | 2 | 3;\n\ninterface BuildParameter {\n  char: string;\n  dir: Direction;\n  flip: boolean;\n}\n\nconst bulletParameter: BuildParameter = { char: '多', dir: 3, flip: false };\n\nconst playerParameter: BuildParameter = { char: '参', dir: 0, flip: false };\n\nconst enemyParameters: readonly BuildParameter[] = [\n  { char: '欠', dir: 0, flip: false },\n  { char: '洞', dir: 0, flip: true },\n  { char: '鯵', dir: 3, flip: false },\n  { char: '娃', dir: 0, flip: true },\n  { char: '辣', dir: 1, flip: true },\n  { char: '酔', dir: 0, flip: false },\n  { char: '彫', dir: 3, flip: false },\n  { char: '委', dir: 2, flip: true },\n  { char: '綾', dir: 3, flip: false },\n  { char: '儒', dir: 0, flip: true },\n  { char: '俺', dir: 0, flip: true },\n  { char: '喪', dir: 0, flip: true },\n  { char: '沈', dir: 0, flip: true },\n  { char: '演', dir: 1, flip: false },\n  { char: '晩', dir: 2, flip: false },\n  { char: '携', dir: 3, flip: false },\n  { char: '詠', dir: 0, flip: true },\n  { char: '筆', dir: 0, flip: true },\n  { char: '筑', dir: 0, flip: true },\n  { char: '苑', dir: 2, flip: true },\n  { char: '摘', dir: 1, flip: false },\n  { char: '描', dir: 2, flip: true },\n  { char: '算', dir: 2, flip: true },\n  { char: '輝', dir: 1, flip: false },\n  { char: '郷', dir: 1, flip: false },\n  { char: '解', dir: 2, flip: true },\n  { char: '鑓', dir: 2, flip: true },\n  { char: '簸', dir: 3, flip: true },\n  { char: '讐', dir: 2, flip: true },\n  { char: '濯', dir: 0, flip: true },\n  { char: '鋳', dir: 0, flip: true },\n  { char: '突', dir: 2, flip: true },\n  { char: '探', dir: 2, flip: true },\n  { char: '邪', dir: 3, flip: false },\n  { char: '淑', dir: 1, flip: true },\n  { char: '擁', dir: 1, flip: false },\n  { char: '桟', dir: 3, flip: true },\n  { char: '呑', dir: 0, flip: true },\n  { char: '桑', dir: 0, flip: true },\n];\n\nconst createCharacterGraphics = (param: BuildParameter, size: number, color: p5.Color) => {\n  const halfSize = 0.5 * size;\n  const graphics = p.createGraphics(size, size);\n  const g = graphics as any as p5; // eslint-disable-line @typescript-eslint/no-explicit-any\n  g.push();\n  g.translate(halfSize, halfSize);\n  g.rotate(param.dir * Math2.HALF_PI);\n  if (param.flip) g.scale(-1, 1);\n  g.fill(color);\n  g.textFont(Fonts.jp, 0.8 * size);\n  g.textAlign(p.CENTER, p.CENTER);\n  g.text(param.char, 0, -0.2 * size);\n  g.pop();\n\n  return graphics;\n};\n\nconst mirrorGraphics = (graphics: p5.Graphics) => {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  const img = graphicsToImage(graphics);\n  const { width, height } = img;\n\n  const mask = p.createGraphics(width, height) as any as p5;\n  mask.fill(0);\n  mask.noStroke();\n  mask.rect(0, 0, width, 0.5 * height);\n  img.mask(mask as any);\n\n  const g = graphics as any as p5; // just for typing\n  g.clear();\n  g.image(img, 0, 0);\n  g.translate(0, height);\n  g.scale(1, -1);\n  g.image(img, 0, 0);\n  /* eslint-enable */\n};\n\nconst createActorGraphics = (param: BuildParameter, size: number, color: p5.Color) => {\n  const graphics = createCharacterGraphics(param, size, color);\n  mirrorGraphics(graphics);\n\n  return () => {\n    p.image(graphics, 0, 0);\n  };\n};\n\nonSetup.push((p) => {\n  const emptyFunction = () => {};\n\n  const firePlayerBullet = (x: number, y: number) => GameCore.firePlayerBullet(x, y, 70, -Math2.HALF_PI, playerBullet);\n\n  const shotKeyCodes: readonly number[] = [\n    32, // SPACE\n    90, // Z\n    122, // z\n    74, // J\n    106, // j\n    13, // CR\n    10, // LF\n  ];\n\n  const margin = 30;\n  const keepInScreen: Actor.RunCallback = (data, i) => {\n    const x = data.x[i];\n    const y = data.y[i];\n\n    const { width, height } = canvas.logicalSize;\n\n    if (x < margin) data.x[i] = margin;\n    else if (x >= width - margin) data.x[i] = width - margin - 1;\n\n    if (y < margin) data.y[i] = margin;\n    else if (y >= height - margin) data.y[i] = height - margin - 1;\n  };\n\n  drawPlayerGraphics = createActorGraphics(playerParameter, 100, p.color(0, 64, 0));\n  player = {\n    run: (data, i) => {\n      keepInScreen(data, i);\n\n      const { vx, vy } = data;\n      const moveDirection = MoveKeys.unitVector;\n      vx[i] = 10 * moveDirection.x;\n      vy[i] = 10 * moveDirection.y;\n\n      if (!KeyBoard.anyKeyIsDown(shotKeyCodes)) {\n        Sound.stopGunSound();\n        return;\n      }\n\n      if (data.frameCount[i] % 16 === 0) return;\n      if (data.frameCount[i] % 2 === 1) return;\n\n      const x = data.x[i];\n      const y = data.y[i];\n\n      firePlayerBullet(x - 45, y);\n      firePlayerBullet(x, y - 20);\n      firePlayerBullet(x + 45, y);\n      firePlayerBullet(x - 45, y - 30);\n      firePlayerBullet(x, y - 50);\n      firePlayerBullet(x + 45, y - 30);\n\n      Sound.playGunSound();\n    },\n    draw: drawPlayerGraphics,\n    drawDamaged: () => {},\n    collisionDistance: 20,\n    maxLife: 3,\n  };\n  playerBullet = {\n    run: emptyFunction,\n    draw: createActorGraphics(bulletParameter, 40, p.color(128, 144, 128)),\n    collisionDistance: 15,\n    maxLife: 1,\n  };\n\n  const runEnemyCandidates: readonly Actor.RunCallback[] = [\n    (data, i) => {\n      const x = data.x[i];\n      const y = data.y[i];\n      const directionToPlayer = GameCore.getDirectionToPlayer(x, y);\n      data.rotationAngle[i] = directionToPlayer;\n      if (data.frameCount[i] % 4 === 0 && Random.bool(0.2)) GameCore.fireEnemyBullet(x, y, 4, directionToPlayer, enemyBullet);\n    },\n    (data, i) => {\n      const frameCount = data.frameCount[i];\n      const x = data.x[i];\n      const y = data.y[i];\n      if (frameCount % 120 < 30) {\n        if (frameCount % 6 === 0) GameCore.fireEnemyBullet(x, y, 5, data.rotationAngle[i], enemyBullet);\n      } else {\n        const directionToPlayer = GameCore.getDirectionToPlayer(x, y);\n        data.rotationAngle[i] += 0.2 * (directionToPlayer - data.rotationAngle[i]);\n      }\n    },\n    (data, i) => {\n      const x = data.x[i];\n      const y = data.y[i];\n      const frameCount = data.frameCount[i];\n      const directionToPlayer = GameCore.getDirectionToPlayer(x, y);\n      data.rotationAngle[i] = directionToPlayer;\n\n      if (frameCount % 90 < 45) return;\n\n      if (frameCount % 4 === 0) {\n        const angle = 0.008 * frameCount;\n        for (let i = 0; i < 4; i += 1) GameCore.fireEnemyBullet(x, y, 8, angle + i * Math2.HALF_PI, enemyBullet);\n      }\n    },\n    (data, i) => {\n      const x = data.x[i];\n      const y = data.y[i];\n      const frameCount = data.frameCount[i];\n      const directionToPlayer = GameCore.getDirectionToPlayer(x, y);\n      data.rotationAngle[i] = directionToPlayer;\n\n      if (frameCount % 90 > 0) return;\n\n      for (let i = 0; i < 24; i += 1) {\n        const angle = (i * Math2.TWO_PI) / 24;\n        GameCore.fireEnemyBullet(x, y, 3, angle + frameCount, enemyBullet);\n      }\n    },\n    (data, i) => {\n      const x = data.x[i];\n      const y = data.y[i];\n      const frameCount = data.frameCount[i];\n\n      if (frameCount % 180 < 90) {\n        if (frameCount % 4 === 0) {\n          const bx = x + Random.between(-50, 50);\n          const by = y + Random.between(-50, 50);\n          const angle = GameCore.getDirectionToPlayer(bx, by);\n          GameCore.fireEnemyBullet(bx, by, 4, angle, enemyBullet);\n        }\n      } else {\n        const directionToPlayer = GameCore.getDirectionToPlayer(x, y);\n        data.rotationAngle[i] += 0.1 * (directionToPlayer - data.rotationAngle[i]);\n      }\n    },\n    (data, i) => {\n      const x = data.x[i];\n      const y = data.y[i];\n      const frameCount = data.frameCount[i];\n      const rotationAngle = data.rotationAngle[i];\n\n      if (frameCount % 180 < 90) {\n        if (frameCount % 4 === 0) {\n          const speed = 4 + 0.2 * (frameCount % 90);\n          const x1 = x - 40;\n          GameCore.fireEnemyBullet(x1, y, speed, rotationAngle, enemyBullet);\n          const x2 = x + 40;\n          GameCore.fireEnemyBullet(x2, y, speed, rotationAngle, enemyBullet);\n        }\n      } else {\n        const directionToPlayer = GameCore.getDirectionToPlayer(x, y);\n        data.rotationAngle[i] += 0.1 * (directionToPlayer - rotationAngle);\n      }\n    },\n  ];\n\n  const enemyColor = p.color(32, 0, 0);\n  const enemyDamagedColor = p.color(192, 0, 0);\n\n  enemies = enemyParameters.map((param, index) => {\n    return {\n      run: runEnemyCandidates[index % runEnemyCandidates.length],\n      draw: createActorGraphics(param, 160, enemyColor),\n      drawDamaged: createActorGraphics(param, 160, enemyDamagedColor),\n      collisionDistance: 70,\n      maxLife: 200,\n    };\n  });\n  enemyBullet = {\n    run: emptyFunction,\n    draw: createActorGraphics(bulletParameter, 40, p.color(0)),\n    collisionDistance: 5,\n    maxLife: 1,\n  };\n\n  const particleColor = p.color(160, 156, 152);\n  const runParticle: Actor.RunCallback = (data, i) => {\n    const progressRatio = data.frameCount[i] / 45;\n    data.scaleFactor[i] = 1 - Easing.easeInQuad(progressRatio);\n    data.vx[i] *= 0.9;\n    data.vy[i] *= 0.9;\n    data.vy[i] += 0.1;\n    if (data.frameCount[i] > 45) GameCore.killParticle(i);\n  };\n  particles = enemyParameters.map((param) => {\n    return {\n      run: runParticle,\n      draw: createActorGraphics(param, 32, particleColor),\n      collisionDistance: 0,\n      maxLife: 0,\n    };\n  });\n});\n\n// const directionArray: readonly Direction[] = [0, 1, 2, 3];\n\n// export const createRandom = (collisionDistance: number) => {\n//   const char = Random.fromArray(kanjis);\n//   const dir = Random.fromArray(directionArray);\n//   console.log(`char: ${char}, dir: ${dir}`);\n\n//   return {\n//     draw: createActorGraphics({ char, dir, flip: false }, 100, p.color(0)),\n//     collisionDistance\n//   };\n// };\n","import { Random } from '@fal-works/creative-coding-core';\nimport * as Core from './core/game-core';\nimport { LOGICAL_CANVAS_SIZE } from '../settings';\n\nexport const enum State {\n  ACTIVE = 'ACTIVE',\n  APPROACHING = 'APPROACHING',\n  ABSENT = 'ABSENT',\n}\n\nexport interface Unit {\n  readonly x: number;\n  readonly y: number;\n  index: number;\n  state: State;\n}\n\nexport const list: readonly Unit[] = [\n  {\n    x: 0.25 * LOGICAL_CANVAS_SIZE.width,\n    y: 0.25 * LOGICAL_CANVAS_SIZE.height,\n    index: -1,\n    state: State.ABSENT,\n  },\n  {\n    x: 0.5 * LOGICAL_CANVAS_SIZE.width,\n    y: 0.15 * LOGICAL_CANVAS_SIZE.height,\n    index: -1,\n    state: State.ABSENT,\n  },\n  {\n    x: 0.75 * LOGICAL_CANVAS_SIZE.width,\n    y: 0.25 * LOGICAL_CANVAS_SIZE.height,\n    index: -1,\n    state: State.ABSENT,\n  },\n];\n\nexport const reset = (addEnemy: (slot: Unit) => void) => {\n  for (let i = 0; i < list.length; i += 1) {\n    const slot = list[i];\n    addEnemy(slot);\n  }\n};\n\nexport const update = (addEnemy: (slot: Unit) => void) => {\n  for (let i = 0; i < list.length; i += 1) {\n    const slot = list[i];\n    switch (slot.state) {\n      case State.ACTIVE:\n        if (!Core.enemyIsActive(slot.index)) slot.state = State.ABSENT;\n        break;\n      case State.ABSENT:\n        if (Random.bool(0.02)) addEnemy(slot);\n        break;\n    }\n  }\n};\n"],"names":[],"version":3,"file":"index.b7d62efe.js.map"}