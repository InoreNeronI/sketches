{"mappings":"ACiBA,IAAI,EAAK,IAAI","sources":["<anon>","src/angry-pacman/index.js"],"sourcesContent":["var blockImg;\nvar foodImg;\nvar powerImg;\nvar angrypacmanImg;\nvar enemy1Img;\nvar enemy2Img;\nvar enemy3Img;\nvar enemy1ImgWeak;\nvar enemy2ImgWeak;\nvar enemy3ImgWeak;\nvar angrypacman = {\n    instance: null,\n    frame: 0,\n    direction: 0\n};\nvar blocks = [];\nvar foods = [];\nvar powers = [];\nvar enemies = [];\nvar activeEnemies = [];\nvar maze;\nvar p5 = new p5();\nvar standarSize = 40;\nfunction preload() {\n    blockImg = loadImage(\"../assets/angry-pacman/block.png\");\n    foodImg = loadImage(\"../assets/angry-pacman/food.png\");\n    powerImg = loadImage(\"../assets/angry-pacman/power.png\");\n    angrypacmanImg = loadImage(\"../assets/angry-pacman/pacman_tile.png\");\n    enemy1Img = loadImage(\"../assets/angry-pacman/pig_1.png\");\n    enemy2Img = loadImage(\"../assets/angry-pacman/pig_2.png\");\n    enemy3Img = loadImage(\"../assets/angry-pacman/pig_3.png\");\n    enemy1ImgWeak = loadImage(\"../assets/angry-pacman/pig_1.png\");\n    enemy2ImgWeak = loadImage(\"../assets/angry-pacman/pig_2.png\");\n    enemy3ImgWeak = loadImage(\"../assets/angry-pacman/pig_3.png\");\n}\nfunction setup() {\n    const CANVAS = createCanvas(882, 562);\n    CANVAS.parent(\"AngryPacman\");\n    maze = new Maze();\n    for(let i = 0; i < maze.rows; i++)for(let j = 0; j < maze.cols; j++){\n        if (maze.maze[i][j] === \"*\") blocks.push(new Element(j * standarSize, i * standarSize, blockImg, angrypacman));\n        else if (maze.maze[i][j] === \"-\") foods.push(new Element(j * (standarSize + 1), i * (standarSize + 1), foodImg, angrypacman));\n        else if (maze.maze[i][j] === \"x\") powers.push(new Element(j * standarSize, i * standarSize, powerImg, angrypacman));\n        else if (maze.maze[i][j] === \"p\") angrypacman.instance = new Element(j * standarSize, i * standarSize, angrypacmanImg, angrypacman);\n        else if (maze.maze[i][j] === \"e1\") enemies.push(new Element(j * standarSize, i * standarSize, enemy1Img, angrypacman));\n        else if (maze.maze[i][j] === \"e2\") enemies.push(new Element(j * standarSize, i * standarSize, enemy2Img, angrypacman));\n        else if (maze.maze[i][j] === \"e3\") enemies.push(new Element(j * standarSize, i * standarSize, enemy3Img, angrypacman));\n    }\n    enemyOutInterval(5000);\n}\nfunction draw() {\n    background(225, 245, 254);\n    enemy1ImgWeak.filter(\"gray\");\n    enemy2ImgWeak.filter(\"gray\");\n    enemy3ImgWeak.filter(\"gray\");\n    for(let i = 0; i < blocks.length; i++)blocks[i].show();\n    for(let i = 0; i < foods.length; i++)foods[i].show();\n    for(let i = 0; i < powers.length; i++)powers[i].show();\n    for(let i = 0; i < enemies.length; i++)enemies[i].show();\n    for(let i = 0; i < activeEnemies.length; i++){\n        frameRate(8);\n        activeEnemies[i].moveEnemy(blocks);\n        activeEnemies[i].show();\n        if (angrypacman.instance.enemyPackmanColission(activeEnemies[i])) {\n            if (activeEnemies[i].isWeak === true) {\n                const activeInitX = activeEnemies[i].initx;\n                const activeInitY = activeEnemies[i].inity;\n                activeEnemies.splice(i, 1);\n                enemies.push(new Element(activeInitX, activeInitY, eval(\"enemy\" + (i + 1) + \"Img\"), angrypacman));\n                document.getElementById(\"score\").innerHTML = parseInt(document.getElementById(\"score\").innerHTML) + 100;\n            } else {\n                alert(\"*** GAME OVER ***\");\n                window.location.reload();\n            }\n        }\n    }\n    angrypacman.instance.showPac();\n    for(let i = 0; i < foods.length; i++)if (angrypacman.instance.eatPac(foods[i])) foods.splice(i, 1);\n    for(let i = 0; i < powers.length; i++)if (angrypacman.instance.eatPower(powers[i])) {\n        powers.splice(i, 1);\n        makeWeak();\n    }\n    if (foods.length <= 0) {\n        alert(\"*** WIN!!! ***\");\n        window.location.reload();\n    }\n}\nfunction makeWeak() {\n    for(let i = 0; i < activeEnemies.length; i++){\n        activeEnemies[i].image = eval(\"enemy\" + (i + 1) + \"ImgWeak\");\n        activeEnemies[i].isWeak = true;\n    }\n}\nfunction keyPressed() {\n    if (keyCode === RIGHT_ARROW) {\n        if (maze.maze[angrypacman.instance.y / standarSize][angrypacman.instance.x / standarSize + 1] !== \"*\") angrypacman.instance.movePac(0);\n    } else if (keyCode === DOWN_ARROW) {\n        if (maze.maze[angrypacman.instance.y / standarSize + 1][angrypacman.instance.x / standarSize] !== \"*\") angrypacman.instance.movePac(1);\n    } else if (keyCode === LEFT_ARROW) {\n        if (maze.maze[angrypacman.instance.y / standarSize][angrypacman.instance.x / standarSize - 1] !== \"*\") angrypacman.instance.movePac(2);\n    } else if (keyCode === UP_ARROW) {\n        if (maze.maze[angrypacman.instance.y / standarSize - 1][angrypacman.instance.x / standarSize] !== \"*\") angrypacman.instance.movePac(3);\n    }\n}\nfunction enemyOutInterval(interval) {\n    setInterval(function() {\n        if (enemies.length > 0) {\n            const eout = enemies.pop();\n            eout.isWeak = false;\n            eout.enemyOut(maze);\n            activeEnemies.push(eout);\n        }\n    }, interval);\n}\n// ----------------------------ELEMENT: BLOCK, FOOD, POWER, PACMAN, ENEMY----------------------------\nfunction Element(x, y, image, character) {\n    this.x = x;\n    this.y = y;\n    this.initx = this.x;\n    this.inity = this.y;\n    this.image = image;\n    this.imageWeak = image;\n    this.frame = character.frame;\n    this.direction = character.direction;\n    this.pacRadius = 16;\n    this.foodRadius = 9;\n    this.powerRadius = 6;\n    this.enemyRadius = 18;\n    this.blockRadius = 6;\n    this.enemyMovement = true;\n    this.isWeak = false;\n    this.show = function() {\n        p5.image(this.image, this.x, this.y);\n    };\n    this.showPac = function() {\n        p5.image(this.image.get(standarSize * this.frame++, this.direction * standarSize, standarSize, standarSize), this.x, this.y);\n        this.frame = this.frame === 8 ? 0 : this.frame;\n    };\n    this.movePac = function(d) {\n        this.direction = d;\n        if (this.direction === 0) this.x += standarSize;\n        else if (this.direction === 1) this.y += standarSize;\n        else if (this.direction === 2) this.x -= standarSize;\n        else if (this.direction === 3) this.y -= standarSize;\n    };\n    this.moveEnemy = function(blocks) {\n        if (this.enemyMovement === false) this.direction = Math.floor(Math.random() * 4);\n        const lastx = this.x;\n        const lasty = this.y;\n        if (this.direction === 0) this.x += standarSize;\n        else if (this.direction === 1) this.y += standarSize;\n        else if (this.direction === 2) this.x -= standarSize;\n        else if (this.direction === 3) this.y -= standarSize;\n        for(let i = 0; i < blocks.length; i++)if (this.enemyBlockColission(blocks[i])) {\n            this.x = lastx;\n            this.y = lasty;\n            this.enemyMovement = false;\n            this.moveEnemy(blocks);\n        } else this.enemyMovement = true;\n    };\n    this.enemyBlockColission = function(b) {\n        return dist(this.x, this.y, b.x, b.y) < this.enemyRadius + b.blockRadius || this.x + this.enemyRadius * 2 > maze.cols * (this.enemyRadius * 2) || this.x - this.enemyRadius * 2 < 0 || this.y + this.enemyRadius * 2 > maze.rows * (this.enemyRadius * 2) || this.y - this.enemyRadius * 2 < 0;\n    };\n    this.enemyPackmanColission = function(e) {\n        return dist(this.x, this.y, e.x, e.y) < this.pacRadius + e.enemyRadius;\n    };\n    this.enemyOut = function(m) {\n        for(let i = 0; i < m.rows; i++){\n            for(let j = 0; j < m.cols; j++)if (m.maze[i][j] === \"eout\") {\n                this.y -= 80;\n                break;\n            }\n        }\n    };\n    this.eatPac = function(f) {\n        if (dist(this.x, this.y, f.x, f.y) < this.pacRadius + f.foodRadius) {\n            document.getElementById(\"score\").innerHTML = parseInt(document.getElementById(\"score\").innerHTML) + 10;\n            return true;\n        } else return false;\n    };\n    this.eatPower = function(p) {\n        return dist(this.x, this.y, p.x, p.y) < this.pacRadius + p.powerRadius;\n    };\n}\n// ----------------------------MAZE----------------------------\nfunction Maze() {\n    var levels = [];\n    levels.push([\n        [\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"x\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\"\n        ],\n        [\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"p\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"x\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\"\n        ],\n        [\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"x\",\n            \"-\",\n            \"eout\",\n            \"eout\",\n            \"eout\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"*\",\n            \"*\",\n            \"\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"*\",\n            \"*\",\n            \"\",\n            \"*\",\n            \"x\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"e1\",\n            \"e2\",\n            \"e3\",\n            \"\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"*\",\n            \"-\",\n            \"x\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\"\n        ],\n        [\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\"\n        ]\n    ]);\n    levels.push([\n        [\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"eout\",\n            \"eout\",\n            \"eout\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"x\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"e1\",\n            \"e2\",\n            \"e3\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"x\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\"\n        ],\n        [\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\"\n        ],\n        [\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"*\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"p\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"x\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"\",\n            \"\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"x\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\"\n        ],\n        [\n            \"-\",\n            \"*\",\n            \"*\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"-\",\n            \"*\",\n            \"x\",\n            \"-\",\n            \"*\",\n            \"-\",\n            \"*\"\n        ]\n    ]);\n    this.rows = 14;\n    this.cols = 22;\n    //-------------------------------------------------SELECT LEVEL HERE-------------------------------------------------\n    this.maze = levels[0];\n    //---------------------------------------------JUST CHANGE LEVEL'S INDEX---------------------------------------------\n    this.show = function() {\n        p5.image(this.image, this.x, this.y);\n    };\n}\n\n//# sourceMappingURL=index.b3bd38a7.js.map\n","var blockImg;\nvar foodImg;\nvar powerImg;\nvar angrypacmanImg;\nvar enemy1Img;\nvar enemy2Img;\nvar enemy3Img;\nvar enemy1ImgWeak;\nvar enemy2ImgWeak;\nvar enemy3ImgWeak;\nvar angrypacman = { instance: null, frame: 0, direction: 0 };\nvar blocks = [];\nvar foods = [];\nvar powers = [];\nvar enemies = [];\nvar activeEnemies = [];\nvar maze;\nvar p5 = new p5();\nvar standarSize = 40;\n\nfunction preload() {\n  blockImg = loadImage('../assets/angry-pacman/block.png');\n  foodImg = loadImage('../assets/angry-pacman/food.png');\n  powerImg = loadImage('../assets/angry-pacman/power.png');\n  angrypacmanImg = loadImage('../assets/angry-pacman/pacman_tile.png');\n  enemy1Img = loadImage('../assets/angry-pacman/pig_1.png');\n  enemy2Img = loadImage('../assets/angry-pacman/pig_2.png');\n  enemy3Img = loadImage('../assets/angry-pacman/pig_3.png');\n  enemy1ImgWeak = loadImage('../assets/angry-pacman/pig_1.png');\n  enemy2ImgWeak = loadImage('../assets/angry-pacman/pig_2.png');\n  enemy3ImgWeak = loadImage('../assets/angry-pacman/pig_3.png');\n}\n\nfunction setup() {\n  const CANVAS = createCanvas(882, 562);\n  CANVAS.parent('AngryPacman');\n  maze = new Maze();\n  for (let i = 0; i < maze.rows; i++) {\n    for (let j = 0; j < maze.cols; j++) {\n      if (maze.maze[i][j] === '*') {\n        blocks.push(new Element(j * standarSize, i * standarSize, blockImg, angrypacman));\n      } else if (maze.maze[i][j] === '-') {\n        foods.push(new Element(j * (standarSize + 1), i * (standarSize + 1), foodImg, angrypacman));\n      } else if (maze.maze[i][j] === 'x') {\n        powers.push(new Element(j * standarSize, i * standarSize, powerImg, angrypacman));\n      } else if (maze.maze[i][j] === 'p') {\n        angrypacman.instance = new Element(j * standarSize, i * standarSize, angrypacmanImg, angrypacman);\n      } else if (maze.maze[i][j] === 'e1') {\n        enemies.push(new Element(j * standarSize, i * standarSize, enemy1Img, angrypacman));\n      } else if (maze.maze[i][j] === 'e2') {\n        enemies.push(new Element(j * standarSize, i * standarSize, enemy2Img, angrypacman));\n      } else if (maze.maze[i][j] === 'e3') {\n        enemies.push(new Element(j * standarSize, i * standarSize, enemy3Img, angrypacman));\n      }\n    }\n  }\n  enemyOutInterval(5000);\n}\n\nfunction draw() {\n  background(225, 245, 254);\n  enemy1ImgWeak.filter('gray');\n  enemy2ImgWeak.filter('gray');\n  enemy3ImgWeak.filter('gray');\n  for (let i = 0; i < blocks.length; i++) {\n    blocks[i].show();\n  }\n  for (let i = 0; i < foods.length; i++) {\n    foods[i].show();\n  }\n  for (let i = 0; i < powers.length; i++) {\n    powers[i].show();\n  }\n  for (let i = 0; i < enemies.length; i++) {\n    enemies[i].show();\n  }\n  for (let i = 0; i < activeEnemies.length; i++) {\n    frameRate(8);\n    activeEnemies[i].moveEnemy(blocks);\n    activeEnemies[i].show();\n\n    if (angrypacman.instance.enemyPackmanColission(activeEnemies[i])) {\n      if (activeEnemies[i].isWeak === true) {\n        const activeInitX = activeEnemies[i].initx;\n        const activeInitY = activeEnemies[i].inity;\n        activeEnemies.splice(i, 1);\n        enemies.push(new Element(activeInitX, activeInitY, eval('enemy' + (i + 1) + 'Img'), angrypacman));\n        document.getElementById('score').innerHTML = parseInt(document.getElementById('score').innerHTML) + 100;\n      } else {\n        alert('*** GAME OVER ***');\n        window.location.reload();\n      }\n    }\n  }\n  angrypacman.instance.showPac();\n  for (let i = 0; i < foods.length; i++) {\n    if (angrypacman.instance.eatPac(foods[i])) {\n      foods.splice(i, 1);\n    }\n  }\n  for (let i = 0; i < powers.length; i++) {\n    if (angrypacman.instance.eatPower(powers[i])) {\n      powers.splice(i, 1);\n      makeWeak();\n    }\n  }\n\n  if (foods.length <= 0) {\n    alert('*** WIN!!! ***');\n    window.location.reload();\n  }\n}\n\nfunction makeWeak() {\n  for (let i = 0; i < activeEnemies.length; i++) {\n    activeEnemies[i].image = eval('enemy' + (i + 1) + 'ImgWeak');\n    activeEnemies[i].isWeak = true;\n  }\n}\n\nfunction keyPressed() {\n  if (keyCode === RIGHT_ARROW) {\n    if (maze.maze[angrypacman.instance.y / standarSize][angrypacman.instance.x / standarSize + 1] !== '*') {\n      angrypacman.instance.movePac(0);\n    }\n  } else if (keyCode === DOWN_ARROW) {\n    if (maze.maze[angrypacman.instance.y / standarSize + 1][angrypacman.instance.x / standarSize] !== '*') {\n      angrypacman.instance.movePac(1);\n    }\n  } else if (keyCode === LEFT_ARROW) {\n    if (maze.maze[angrypacman.instance.y / standarSize][angrypacman.instance.x / standarSize - 1] !== '*') {\n      angrypacman.instance.movePac(2);\n    }\n  } else if (keyCode === UP_ARROW) {\n    if (maze.maze[angrypacman.instance.y / standarSize - 1][angrypacman.instance.x / standarSize] !== '*') {\n      angrypacman.instance.movePac(3);\n    }\n  }\n}\n\nfunction enemyOutInterval(interval) {\n  setInterval(function () {\n    if (enemies.length > 0) {\n      const eout = enemies.pop();\n      eout.isWeak = false;\n      eout.enemyOut(maze);\n      activeEnemies.push(eout);\n    }\n  }, interval);\n}\n\n// ----------------------------ELEMENT: BLOCK, FOOD, POWER, PACMAN, ENEMY----------------------------\nfunction Element(x, y, image, character) {\n  this.x = x;\n  this.y = y;\n  this.initx = this.x;\n  this.inity = this.y;\n  this.image = image;\n  this.imageWeak = image;\n  this.frame = character.frame;\n  this.direction = character.direction;\n  this.pacRadius = 16;\n  this.foodRadius = 9;\n  this.powerRadius = 6;\n  this.enemyRadius = 18;\n  this.blockRadius = 6;\n  this.enemyMovement = true;\n  this.isWeak = false;\n\n  this.show = function () {\n    p5.image(this.image, this.x, this.y);\n  };\n\n  this.showPac = function () {\n    p5.image(this.image.get(standarSize * this.frame++, this.direction * standarSize, standarSize, standarSize), this.x, this.y);\n    this.frame = this.frame === 8 ? 0 : this.frame;\n  };\n\n  this.movePac = function (d) {\n    this.direction = d;\n    if (this.direction === 0) {\n      this.x += standarSize;\n    } else if (this.direction === 1) {\n      this.y += standarSize;\n    } else if (this.direction === 2) {\n      this.x -= standarSize;\n    } else if (this.direction === 3) {\n      this.y -= standarSize;\n    }\n  };\n\n  this.moveEnemy = function (blocks) {\n    if (this.enemyMovement === false) {\n      this.direction = Math.floor(Math.random() * 4);\n    }\n    const lastx = this.x;\n    const lasty = this.y;\n    if (this.direction === 0) {\n      this.x += standarSize;\n    } else if (this.direction === 1) {\n      this.y += standarSize;\n    } else if (this.direction === 2) {\n      this.x -= standarSize;\n    } else if (this.direction === 3) {\n      this.y -= standarSize;\n    }\n    for (let i = 0; i < blocks.length; i++) {\n      if (this.enemyBlockColission(blocks[i])) {\n        this.x = lastx;\n        this.y = lasty;\n        this.enemyMovement = false;\n        this.moveEnemy(blocks);\n      } else {\n        this.enemyMovement = true;\n      }\n    }\n  };\n\n  this.enemyBlockColission = function (b) {\n    return (\n      dist(this.x, this.y, b.x, b.y) < this.enemyRadius + b.blockRadius ||\n      this.x + this.enemyRadius * 2 > maze.cols * (this.enemyRadius * 2) ||\n      this.x - this.enemyRadius * 2 < 0 ||\n      this.y + this.enemyRadius * 2 > maze.rows * (this.enemyRadius * 2) ||\n      this.y - this.enemyRadius * 2 < 0\n    );\n  };\n\n  this.enemyPackmanColission = function (e) {\n    return dist(this.x, this.y, e.x, e.y) < this.pacRadius + e.enemyRadius;\n  };\n\n  this.enemyOut = function (m) {\n    for (let i = 0; i < m.rows; i++) {\n      for (let j = 0; j < m.cols; j++) {\n        if (m.maze[i][j] === 'eout') {\n          this.y -= 80;\n          break;\n        }\n      }\n    }\n  };\n\n  this.eatPac = function (f) {\n    if (dist(this.x, this.y, f.x, f.y) < this.pacRadius + f.foodRadius) {\n      document.getElementById('score').innerHTML = parseInt(document.getElementById('score').innerHTML) + 10;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.eatPower = function (p) {\n    return dist(this.x, this.y, p.x, p.y) < this.pacRadius + p.powerRadius;\n  };\n}\n\n// ----------------------------MAZE----------------------------\nfunction Maze() {\n  var levels = [];\n  levels.push([\n    ['*', '*', '*', '*', '-', '-', '-', '-', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '-', '-', '*'],\n    ['*', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '*', '*', 'x', '-', '-', '-', '-', '-', '-', '-', '-'],\n    ['*', '-', '*', '*', '-', '*', '-', '*', '*', '-', '-', '*', '*', '-', '-', '*', '*', '-', '-', '*', '-', '*'],\n    ['*', '-', '*', '*', '-', '-', '-', '*', '*', '-', 'p', '-', '-', '-', '-', '*', '*', '-', '-', '-', '-', '*'],\n    ['-', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],\n    ['-', '-', '*', '*', '-', '-', '-', '*', '-', '-', '*', '*', '*', '*', '-', '-', '*', '-', '-', '-', '-', '*'],\n    ['-', '-', '-', '-', '-', '*', '-', '*', '-', '-', '-', '*', '*', '-', '-', '-', '*', '-', '-', '*', '-', '-'],\n    ['-', '-', '-', '-', '-', '-', '-', '*', '*', '*', '-', '*', '*', '-', '*', '*', '*', '-', '-', '-', '-', '-'],\n    ['-', '*', '*', '*', '-', '-', '-', '*', 'x', '-', 'eout', 'eout', 'eout', '-', '-', '-', '*', '-', '-', '-', '-', '*'],\n    ['*', '*', '', '*', '-', '-', '-', '*', '-', '*', '*', '*', '*', '*', '*', '-', '*', '-', '-', '-', '-', '*'],\n    ['*', '*', '', '*', 'x', '*', '-', '-', '-', '*', 'e1', 'e2', 'e3', '', '*', '-', '-', '-', '-', '*', '-', '*'],\n    ['-', '*', '*', '*', '-', '-', '-', '-', '-', '*', '', '', '', '', '*', '-', 'x', '-', '-', '-', '-', '*'],\n    ['-', '-', '-', '-', '-', '-', '-', '*', '-', '*', '*', '*', '*', '*', '*', '-', '*', '-', '-', '-', '-', '-'],\n    ['-', '*', '*', '*', '-', '*', '-', '*', '-', '-', '-', '-', '-', '-', '-', '-', '*', '-', '-', '*', '-', '-'],\n  ]);\n  levels.push([\n    ['-', '*', '*', '*', '-', '*', '-', '*', '-', '-', '-', '-', '-', '-', '-', '-', '*', '-', '-', '*', '-', '-'],\n    ['-', '-', '-', '*', '-', '-', '-', '*', '-', '-', 'eout', 'eout', 'eout', '-', '-', '-', '*', '-', '-', '-', '-', '*'],\n    ['-', '-', '-', '*', '-', '*', 'x', '*', '-', '*', '*', '*', '*', '*', '-', '-', '-', '-', '*', '*', '-', '*'],\n    ['-', '*', '*', '*', '-', '*', '-', '*', '-', '*', 'e1', 'e2', 'e3', '*', '-', '-', '*', 'x', '-', '-', '-', '*'],\n    ['-', '-', '-', '-', '-', '*', '-', '*', '-', '*', '*', '*', '*', '*', '-', '-', '*', '-', '-', '-', '-', '-'],\n    ['*', '-', '-', '-', '-', '*', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],\n    ['*', '-', '*', '*', '-', '*', '-', '*', '*', '-', '-', '*', '*', '-', '-', '*', '*', '-', '-', '*', '-', '*'],\n    ['*', '-', '*', '*', '-', '-', '-', '*', '*', 'p', '-', '-', '-', '-', '-', '*', '*', '-', '-', '-', '-', '*'],\n    ['-', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '*', '*', '*', '*', '*'],\n    ['-', '-', '*', '*', '-', '-', '-', '*', '-', '-', '*', '*', '*', '*', '-', '-', '*', '-', '-', '-', '-', '*'],\n    ['-', '-', '-', '-', '-', '*', '-', '*', '-', '-', '*', '', '', '*', '-', '-', '*', '-', '-', '*', '-', '*'],\n    ['-', '-', '-', '-', '-', '-', '-', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '-', '-', '-', '-', '*'],\n    ['-', '*', '*', '*', '-', '-', '-', '-', '-', '-', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', '-', '*'],\n    ['-', '*', '*', '*', '-', '*', '-', '*', '-', '-', '-', '-', '-', '-', '-', '-', '*', 'x', '-', '*', '-', '*'],\n  ]);\n  this.rows = 14;\n  this.cols = 22;\n\n  //-------------------------------------------------SELECT LEVEL HERE-------------------------------------------------\n  this.maze = levels[0];\n  //---------------------------------------------JUST CHANGE LEVEL'S INDEX---------------------------------------------\n\n  this.show = function () {\n    p5.image(this.image, this.x, this.y);\n  };\n}\n"],"names":["p5"],"version":3,"file":"index.b3bd38a7.js.map"}